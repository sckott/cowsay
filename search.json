[{"path":"https://sckott.github.io/cowsay/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"NA","text":"’re looking ASCII art can recognized immediately. ’d like stay away ASCII art ’s hard tell thing . Ask , R users know thing ? , may useful make art detailed consider using different piece art. Exceptions case case basis.","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"out-of-scope","dir":"","previous_headings":"Scope","what":"Out of scope","title":"NA","text":"specific people (exceptions case case basis, e.g. cowsay: rms) drug references profanity demeaning/caricaturing group people","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"size","dir":"","previous_headings":"Scope","what":"Size","title":"NA","text":"Art must bigger following three examples: hypnotoad, shark, bat2","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"not-sure-about-scope","dir":"","previous_headings":"Scope","what":"Not sure about scope?","title":"NA","text":"opening pull request, ’s good idea open issue check idea scope.","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"contributing-code-to-cowsay","dir":"","previous_headings":"","what":"Contributing code to cowsay","title":"NA","text":"Fork repo Add ascii art animal animals vector animals.r - just follow examples, try execute code character console looks right. careful use auto-indenting editor file wreck formatting animals. animal contains non-ascii characters, display properly Windows. Please add list animals don’t work Windows @details section help say function. Push back account, send pull request sckott/cowsay. want submit issue, go issues page .","code":""},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to cowsay","text":"Stable version CRAN dev version GitHub","code":"install.packages(\"cowsay\") # install.packages(\"pak\") pak::pak(\"sckott/cowsay\") library(cowsay)"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"the-animals","dir":"Articles","previous_headings":"","what":"The animals","title":"Introduction to cowsay","text":"animals, ascii creatures, single named character vector exported package. Thus, can access animal , whatever want . writing, 59 animals. names animals: example, access cow","code":"sort(names(animals)) #> NULL cow <- animal_fetch('cow') cat(cow) #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      ||"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"say-something","dir":"Articles","previous_headings":"","what":"Say something","title":"Introduction to cowsay","text":"expose function say() package, can use envoke animal package, make say whatever want. examples: ’s special time, print time","code":"say(\"why did the chicken cross the road\", \"chicken\") #>  #>  ____________________________________  #> < why did the chicken cross the road > #>  ------------------------------------  #>       \\ #>        \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] say(\"boo!\", \"ghost\") #>  #>  ______  #> < boo! > #>  ------  #>   \\ #>    \\ #>  #>      .-. #>     (o o) #>     | O \\ #>      \\   \\ #>       `~~~' [nosig] say(\"nope, don't do that\", type = \"warning\") #> Warning in say(\"nope, don't do that\", type = \"warning\"):  #>  _____________________  #> < nope, don't do that > #>  ---------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"time\") #>  #>  ____________________________  #> < 2025-03-28 22:16:14.878532 > #>  ----------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      ||"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"its-how-you-say-it","dir":"Articles","previous_headings":"","what":"It’s how you say it","title":"Introduction to cowsay","text":"can use say() give back string, message, warning Message Warning String","code":"say(\"hello world\", by = \"cow\") #>  #>  _____________  #> < hello world > #>  -------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hello world\", by = \"cow\", type = \"warning\") #> Warning in say(\"hello world\", by = \"cow\", type = \"warning\"):  #>  _____________  #> < hello world > #>  -------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hello world\", by = \"cow\", type = \"string\") #> [1] \"\\n _____________ \\n< hello world >\\n ------------- \\n      \\\\\\n       \\\\\\n\\n        ^__^ \\n        (oo)\\\\ ________ \\n        (__)\\\\         )\\\\ /\\\\ \\n             ||------w|\\n             ||      ||\""},{"path":"https://sckott.github.io/cowsay/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Author, maintainer. Amanda Dobbyn. Author. Tyler Rinker. Contributor. Thomas Leeper. Contributor. Noam Ross. Contributor. Rich FitzJohn. Contributor. Carson Sievert. Contributor. Kiyoko Gotanda. Contributor. Andy Teucher. Contributor. Karl Broman. Contributor. Franz-Sebastian Krah. Contributor. Lucy D'Agostino McGowan. Contributor. Guangchuang Yu. Contributor. Philipp Boersch-Supan. Contributor. Andreas Brandmaier. Contributor. Marion Louveaux. Contributor. David Schoch. Contributor.","code":""},{"path":"https://sckott.github.io/cowsay/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S, Dobbyn (2025). cowsay: Messages, Warnings, Strings Ascii Animals. R package version 1.0.1.91, https://sckott.github.io/cowsay/, https://github.com/sckott/cowsay.","code":"@Manual{,   title = {cowsay: Messages, Warnings, Strings with Ascii Animals},   author = {Scott Chamberlain and Amanda Dobbyn},   year = {2025},   note = {R package version 1.0.1.91, https://sckott.github.io/cowsay/},   url = {https://github.com/sckott/cowsay}, }"},{"path":[]},{"path":"https://sckott.github.io/cowsay/index.html","id":"what-is-this","dir":"","previous_headings":"","what":"What is this?","title":"Messages, Warnings, Strings with Ascii Animals","text":"familiar cowsay cli, know , R. , read . ? ?","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"history","dir":"","previous_headings":"","what":"History","title":"Messages, Warnings, Strings with Ascii Animals","text":"cowsay originally written Tony Monroe, first code released 1999. version cowsay get via homebrew fork Andrew Janke https://cowsay.diamonds/ (code repo). code original can found tnalpgge/rank-amateur-cowsay original website can seen Wayback Machine. original version Janke written Perl. cowsay get apt Linux machines last version Monroe released 2016 (v3.0.4 possibly v3.0.3). R package additional features orginal cowsay doesn’t , also lacks features original . package doesn’t yet support custom eyes tongue cow animals.","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"contributors-alphabetical","dir":"","previous_headings":"","what":"Contributors (alphabetical)","title":"Messages, Warnings, Strings with Ascii Animals","text":"Amanda Dobbyn Andreas Brandmaier Andy Teucher Carson Sievert David Schoch Franz-Sebastian Krah Guangchuang Yu Karl Broman Kiyoko Gotanda Lucy D’Agostino McGowan Marion Louveaux Noam Ross Paolo Sonego Philipp Boersch-Supan Rich FitzJohn Scott Chamberlain Thomas Leeper Tyler Rinker ’s right, takes 18 people make cowsay - ’s hard.","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Messages, Warnings, Strings with Ascii Animals","text":"See CONTRIBUTING.md","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"where-to-find-ascii-animal-art","dir":"","previous_headings":"","what":"Where to find ASCII animal art","title":"Messages, Warnings, Strings with Ascii Animals","text":"Sources look : https://asciiart.website/ - , person collects - mention license, permissions, etc. Permissions ascii art mailing list https://groups.google.com/forum/#!forum/alt.ascii-art say: , let’s go rule: Let’s include found (web) ascii art pkg, include signature , signature, put [nosig] (see ).","code":"As for posting other people's ASCII art,     after a discussion in news:alt.ascii-art       _     ___     the following rules were agreed upon:         #_~`--'__ `===-,     1.  If an ASCII ART picture has initials      `.`.     `#.,//         on it, leave them on when posting it      ,_\\_\\     ## #\\     2.  If an ASCII ART picture doesn't have      `__.__    `####\\         initials on it,  mention  that  you            ~~\\ ,###'~         didn't  draw  it  when  posting  it.              \\##'     3.  If somebody  posts a picture without                  [nosig]         initials and you have an original copy         with initials on, feel free to re-post the original version.         *   The re-post ought not to be taken personally, as we all             know that ASCII art often loses proper credits.             Responses to the re-post are not necessary.      One contributor, name of Krogg, suggested the following:      1.) Ultra polite:...ya make yer own ascii and use it.     2.)  Very polite:...Ya contact the author and ask if ya                         can use it...     3.)       polite:...Ya use it but you keep the Credits                         in there like they should be.     4.)         rude:...Ya use it and strip credits.     5.)    Very rude:...Ya use it and claim that it Is                         _Your_ very own creation..."},{"path":"https://sckott.github.io/cowsay/index.html","id":"quick-watch-start","dir":"","previous_headings":"","what":"Quick watch start","title":"Messages, Warnings, Strings with Ascii Animals","text":"Asciicast: https://asciinema.org//7745","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Messages, Warnings, Strings with Ascii Animals","text":"CRAN Dev version","code":"install.packages(\"cowsay\") # install.packages(\"pak\") pak::pak(\"sckott/cowsay\") library(\"cowsay\")"},{"path":"https://sckott.github.io/cowsay/index.html","id":"the-animals","dir":"","previous_headings":"","what":"The animals","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"sort(animals) #>  [1] \"alligator\"    \"ant\"          \"anxiouscat\"   \"bat\"          \"bat2\"         #>  [6] \"beavis\"       \"behindcat\"    \"bigcat\"       \"blowfish\"     \"buffalo\"      #> [11] \"cat\"          \"chicken\"      \"chuck\"        \"clippy\"       \"cow\"          #> [16] \"cow_borg\"     \"cow_dead\"     \"cow_greedy\"   \"cow_sleepy\"   \"cow_tired\"    #> [21] \"cow_wired\"    \"cow_young\"    \"daemon\"       \"duck\"         \"duckling\"     #> [26] \"egret\"        \"endlesshorse\" \"facecat\"      \"fish\"         \"frog\"         #> [31] \"ghost\"        \"goldfish\"     \"grumpycat\"    \"hypnotoad\"    \"longcat\"      #> [36] \"longtailcat\"  \"monkey\"       \"mushroom\"     \"owl\"          \"pig\"          #> [41] \"poop\"         \"pumpkin\"      \"rabbit\"       \"shark\"        \"shortcat\"     #> [46] \"signbunny\"    \"smallcat\"     \"snowman\"      \"spider\"       \"squirrel\"     #> [51] \"squirrel2\"    \"stegosaurus\"  \"stretchycat\"  \"trilobite\"    \"turkey\"       #> [56] \"whale\"        \"wolf\"         \"yoda\""},{"path":"https://sckott.github.io/cowsay/index.html","id":"say-something","dir":"","previous_headings":"","what":"Say Something","title":"Messages, Warnings, Strings with Ascii Animals","text":"Add color:   String styles together crayon-style:  doesn’t preclude adding extra crayon colors string directly - results super pretty:","code":"say(\"time\") #>  #>  ____________________________  #> < 2025-03-25 22:48:47.356922 > #>  ----------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"ain't that some shit\", \"chicken\") #>  #>  ______________________  #> < ain't that some shit > #>  ----------------------  #>       \\ #>        \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] library(crayon) say(\"boo!\", \"ghost\",   what_color = \"cyan\", by_color = \"saddlebrown\" ) say(\"I love hooo you are!\", \"owl\",   what_color = rgb(0, 1, 1), by_color = \"#FF0000\" ) say(   what = \"rms\", by = \"rms\",   what_color = yellow$bgMagenta$bold,   by_color = cyan$italic ) say(   what = paste0(\"hello \", crayon::yellow(\"there \"), crayon::underline(\"world\")),   by = \"trilobite\" )"},{"path":"https://sckott.github.io/cowsay/index.html","id":"vary-type-of-output-default-calls-message","dir":"","previous_headings":"","what":"Vary type of output, default calls message()","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"hell no!\") #>  #>  __________  #> < hell no! > #>  ----------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hell no!\", type = \"warning\") #> Warning in say(\"hell no!\", type = \"warning\"):  #>  __________  #> < hell no! > #>  ----------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hell no!\", type = \"string\") #> [1] \"\\n __________ \\n< hell no! >\\n ---------- \\n      \\\\\\n       \\\\\\n\\n        ^__^ \\n        (oo)\\\\ ________ \\n        (__)\\\\         )\\\\ /\\\\ \\n             ||------w|\\n             ||      ||\""},{"path":"https://sckott.github.io/cowsay/index.html","id":"catfacts","dir":"","previous_headings":"","what":"Catfacts!!!!","title":"Messages, Warnings, Strings with Ascii Animals","text":"catfacts API https://catfact.ninja","code":"say(\"catfact\", \"cat\") #>  #>  _________________________________________________________  #> / When a family cat died in ancient Egypt, family members \\ #> | would mourn by shaving off their eyebrows. They also    | #> | held elaborate funerals during which they drank wine    | #> | and beat their breasts. The cat was embalmed with a     | #> | sculpted wooden mask and the tiny mummy was placed in   | #> | the family tomb or in a pet cemetery with tiny mummies  | #> \\ of mice.                                                / #>  ---------------------------------------------------------  #>          \\ #>           \\ #>  #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_)"},{"path":"https://sckott.github.io/cowsay/index.html","id":"long-cat","dir":"","previous_headings":"","what":"Long cat","title":"Messages, Warnings, Strings with Ascii Animals","text":"Boing Boing tweet 2014-05-10 “twitter.com/BoingBoing/status/465170473194512384” (post may gone)","code":"say(\"it's caturday\", \"longcat\") #>  #>  _______________  #> < it's caturday > #>  ---------------  #>  \\ #>   \\ #>  #>     .ﾊ,,ﾊ #>     ( ﾟωﾟ) #>     |つ  つ #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     U \"  U #>         [BoingBoing]"},{"path":"https://sckott.github.io/cowsay/index.html","id":"grumpy-cat","dir":"","previous_headings":"","what":"Grumpy cat","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"NO!\", by = \"grumpycat\") #>  #>  _____  #> < NO! > #>  -----  #>      \\ #>       \\ #>  #>       ﾊ _ ﾊ #>       ಠ X ಠ say(\"WOKE UP TODAY, IT WAS TERRIBLE\", by = \"grumpycat\") #>  #>  ________________________________  #> < WOKE UP TODAY, IT WAS TERRIBLE > #>  --------------------------------  #>      \\ #>       \\ #>  #>       ﾊ _ ﾊ #>       ಠ X ಠ say(\"I HAD FUN ONCE, IT WAS AWFUL\", by = \"grumpycat\") #>  #>  ______________________________  #> < I HAD FUN ONCE, IT WAS AWFUL > #>  ------------------------------  #>      \\ #>       \\ #>  #>       ﾊ _ ﾊ #>       ಠ X ಠ"},{"path":"https://sckott.github.io/cowsay/index.html","id":"bunny-holding-a-sign","dir":"","previous_headings":"","what":"Bunny Holding a sign","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(by = \"signbunny\") #>  #>  ______________  #> < Hello world! > #>  --------------  #> \\ #> \\ #>  #> (\\__/) || #> (•ㅅ•) || #> /   づ #>           [nosig]"},{"path":"https://sckott.github.io/cowsay/index.html","id":"fish","dir":"","previous_headings":"","what":"Fish","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(by = \"fish\") #>  #>  ______________  #> < Hello world! > #>  --------------  #>        \\ #>         \\ #>  #>   ><((((º>  ><((((º>  ><((((º>  ><((((º>  ><((((º> #>       Kiyoko Gotanda"},{"path":"https://sckott.github.io/cowsay/index.html","id":"r-fortunes","dir":"","previous_headings":"","what":"R fortunes","title":"Messages, Warnings, Strings with Ascii Animals","text":"can also pick particular fortune number regex search - fortune parameter NULL don’t pass anything parameter (1st parameter)","code":"library(fortunes) say(\"fortune\", \"cat\") #>  #>  ________________________________________________________  #> / Finally, a word of wisdom from a long-ago engineering  \\ #> | colleague: \"Whenever I see an outlier, I'm never sure  | #> | whether to throw it away or patent it.\"  Berton Gunter | #> \\ on outlier identification R-help December 2009         / #>  --------------------------------------------------------  #>          \\ #>           \\ #>  #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) say(fortune = 100) #>  #>  _________________________________________________________  #> / I'm not sure I'd trust any computer recommendation from \\ #> | 1976, no matter how famous the authors are.  Peter      | #> | Dalgaard after Samuel Edward Kemp cited a               | #> | recommendation about nonlinear least squares computer   | #> \\ programs from 'Box-Jenkins, 1976' R-help January 2005   / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(fortune = \"whatever\") #>  #>  _________________________________________________________  #> / Justin: Is there a function that just does whatever I'm \\ #> | thinking (aka whatever my homework question is...)?     | #> | Joshua Ulrich: That's the magic_pony function.  Justin  | #> \\ and Joshua Ulrich stackoverflow.com June 2013           / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      ||"},{"path":"https://sckott.github.io/cowsay/index.html","id":"trilobite","dir":"","previous_headings":"","what":"Trilobite","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"Hi there :)\", by = \"trilobite\") #> #>  _____________ #> < Hi there :) > #>  ------------- #>        \\ #>         \\ #> #>           _____ #>        .'` ,-. `'. #>       /   ([ ])   \\ #>      /.-\"\"`(`)`\"\"-.\\ #>       <'```(.)```'> #>       <'```(.)```'> #>        <'``(.)``'> #>    sk   <``\\_/``> #>          `'---'`"},{"path":"https://sckott.github.io/cowsay/index.html","id":"shark","dir":"","previous_headings":"","what":"Shark","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"Q: What do you call a solitary shark\\nA: A lone shark\", by = \"shark\") #>  #>  ______________________________________________________  #> < Q: What do you call a solitary shark A: A lone shark > #>  ------------------------------------------------------  #>            \\ #>             \\ #>  #>               /\"\"-._ #>               .       '-, #>                :          '', #>                 ;      *     '. #>                  ' *         () '. #>                    \\               \\ #>                     \\      _.---.._ '. #>                     :  .' _.--''-''  \\ ,' #>         .._           '/.'             . ; #>         ; `-.          ,                \\' #>          ;   `,         ;              ._\\ #>           ;    \\     _,-'                ''--._ #>           :    \\_,-'                          '-._ #>           \\ ,-'                       .          '-._ #>           .'         __.-'';            \\...,__       '. #>         .'      _,-'        \\              \\   ''--.,__  '\\ #>         /    _,--' ;         \\              ;           \\^.} #>         ;_,-' )     \\  )\\      )            ; #>              /       \\/  \\_.,-'             ; #>             /                              ; #>          ,-'  _,-'''-.    ,-.,            ;      PFA #>       ,-' _.-'        \\  /    |/'-._...--' #>      :--``             )/ #>   '"},{"path":"https://sckott.github.io/cowsay/index.html","id":"buffalo","dir":"","previous_headings":"","what":"Buffalo","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"Q: What do you call a single buffalo?\\nA: A buffalonely\", by = \"buffalo\") #> #>  ________________________________________________________ #> < Q: What do you call a single buffalo? A: A buffalonely > #>  -------------------------------------------------------- #>                 \\ #>                  \\ #> #>                    _.-````'-,_ #>          _,.,_ ,-'`           `'-.,_ #>        /)     (                   '``-. #>       ((      ) )                      `\\ #>         \\)    (_/                        )\\ #>         |       /)           '    ,'    / \\ #>         `\\    ^'            '     (    /  )) #>           |      _/\\ ,     /    ,,`\\   (  \"` #>           \\Y,   |   \\  \\  | ````| / \\_ \\ #>             `)_/      \\  \\  )    ( >  ( > #>                        \\( \\(     |/   |/ #>           mic & dwb  /_(/_(    /_(  /_("},{"path":"https://sckott.github.io/cowsay/index.html","id":"clippy","dir":"","previous_headings":"","what":"Clippy","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(fortune = 59, by = \"clippy\") #>  #>  ________________________________________________________  #> / Let's not kid ourselves: the most widely used piece of \\ #> | software for statistics is Excel.  Brian D. Ripley     | #> | 'Statistical Methods Need Software: A View of          | #> | Statistical Computing' Opening lecture RSS 2002,       | #> \\ Plymouth September 2002                                / #>  --------------------------------------------------------  #>  \\ #>   \\ #>  #>     _ #>    / \\ #>    | | #>    @ @ #>   || || #>   || || #>   |\\_/| #>   \\___/ GB"},{"path":"https://sckott.github.io/cowsay/index.html","id":"yoda","dir":"","previous_headings":"","what":"Yoda","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"yoda\")"},{"path":"https://sckott.github.io/cowsay/index.html","id":"bats","dir":"","previous_headings":"","what":"Bats!","title":"Messages, Warnings, Strings with Ascii Animals","text":"See also bat2","code":"say(\"hi, i'm a bat\", by = \"bat\") #>  #>  _______________  #> < hi, i'm a bat > #>  ---------------  #>                \\ #>                 \\ #>  #>         __.--'\\     \\.__./     /'--.__ #>     _.-'       '.__.'    '.__.'       '-._ #>   .'                                      '. #>  /                                          \\ #> |                                            | #> |                                            | #>  \\         .---.              .---.         / #>   '._    .'     '.''.    .''.'     '.    _.' #>      '-./            \\  /           \\.-' #>                       ''mrf"},{"path":"https://sckott.github.io/cowsay/index.html","id":"monkey","dir":"","previous_headings":"","what":"Monkey!","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"monkey\") #>  #>  _________________________________________________________  #> / R is Open Source and so you can modify it to emulate    \\ #> | the bugs in other software: that is not one of the aims | #> | of its developers so please don't expect us to do so    | #> | for you.  Brian D. Ripley answering a request for a     | #> | change to Excel-like non IEC 60559 standard conform     | #> \\ rounding R-help March 2009                              / #>  ---------------------------------------------------------  #>                \\ #>                 \\ #>  #>                   .=\"=. #>                 _/.-.-.\\_     _ #>                ( ( o o ) )    )) #>                 |/  \"  \\|    // #>                  \\'---'/    // #>            jgs   /`\"\"\"`\\\\  (( #>                 / /_,_\\ \\\\  \\\\ #>                 \\_\\_'__/  \\  )) #>                 /`  /`~\\   |// #>                /   /    \\  / #>           ,--`,--'\\/\\    / #>           '-- \"--'  '--'"},{"path":"https://sckott.github.io/cowsay/index.html","id":"daemon","dir":"","previous_headings":"","what":"Daemon!","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"daemon\") #>  #>  ______________________________________________________  #> / The learning curve is steep - but then like many     \\ #> | people, I'd like to be able to do sophisticated      | #> | modelling with deep understanding and no effort :-)  | #> | Sean O'Riordain in a thread about the helpfulness of | #> \\ documentation R-help July 2005                       / #>  ------------------------------------------------------  #>                  \\ #>                   \\ #>             ,        , #>             /(        )` #>             \\ \\___   / | #>             /- _  `-/  ' #>            (/\\/ \\ \\   /\\ #>            / /   | `     #>            O O   ) /    | #>            `-^--'`<     ' #>           (_.)  _  )   / #>            `.___/`    / #>              `-----' / #> <----.     __ / __   \\ #> <----|====O)))==) \\) /==== #> <----'    `--' `.__,' \\ #>              |        | #>               \\       / #>         ______( (_  / \\______ #>       ,'  ,-----'   |        \\ #>       `--{__________)        \\/ [nosig]"},{"path":"https://sckott.github.io/cowsay/index.html","id":"egret","dir":"","previous_headings":"","what":"Egret","title":"Messages, Warnings, Strings with Ascii Animals","text":"See also bat2","code":"say(\"je ne regrette rien\", by = \"egret\") #>  #>  _____________________  #> < je ne regrette rien > #>  ---------------------  #>         \\ #>          \\ #>  #>            _, #>       -==<' ` #>           ) / #>          / (_. #>         |  ,-,`\\ #>          \\\\   \\ \\ #>           `\\,  \\ \\ #>            ||\\  \\`|, #>  jgs      _|| `=`-' #>          ~~`~`"},{"path":"https://sckott.github.io/cowsay/index.html","id":"endless-horse","dir":"","previous_headings":"","what":"Endless horse","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"endless_horse() ## ----- ## Hello world! ## ------ ##    \\ ##     \\ ##      \\ ##       , ##    _,,)\\.~,,._ ##     (()`  ``)\\))),,_ ##      |     \\ ''((\\)))),,_          ____ ##      |6`   |   ''((\\())) \"-.____.-\"    `-.-, ##      |    .'\\    ''))))'                  \\))) ##      |   |   `.     ''                     (((( ##      \\, _)     \\/                          |)))) ##       `'        |                          ((((( ##                 \\                  |       )))))) ##                  `|    |           ,\\     /(((((( ##                   |   / `-.______.<  \\   |  ))))) ##                   |   |  /         `. \\  \\  (((( ##                   |  / \\ |           `.\\  | ((( ##                   \\  | | |             )| |  )) ##                    | | | |             || |  '   [endless.horse] ##                    | | | |             || | ## ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || |"},{"path":"https://sckott.github.io/cowsay/index.html","id":"using-pipes","dir":"","previous_headings":"","what":"Using pipes","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"library(\"magrittr\") \"I HAD FUN ONCE, IT WAS AWFUL\" %>% say(\"grumpycat\") #>  #>  ______________________________  #> < I HAD FUN ONCE, IT WAS AWFUL > #>  ------------------------------  #>      \\ #>       \\ #>  #>       ﾊ _ ﾊ #>       ಠ X ಠ"},{"path":"https://sckott.github.io/cowsay/index.html","id":"i-just-want-the-animals","dir":"","previous_headings":"","what":"I just want the animals!","title":"Messages, Warnings, Strings with Ascii Animals","text":"Okay, hold endless horses. Just use function animal_fetch() select animal want name.","code":"animal_fetch(\"clippy\") #> [1] \"\\n    _\\n   / \\\\\\n   | |\\n   @ @\\n  || ||\\n  || ||\\n  |\\\\_/|\\n  \\\\___/ GB\""},{"path":"https://sckott.github.io/cowsay/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Messages, Warnings, Strings with Ascii Animals","text":"License: MIT Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://sckott.github.io/cowsay/reference/animal_fetch.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch an animal — animal_fetch","title":"Fetch an animal — animal_fetch","text":"Fetch animal","code":""},{"path":"https://sckott.github.io/cowsay/reference/animal_fetch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch an animal — animal_fetch","text":"","code":"animal_fetch(by)"},{"path":"https://sckott.github.io/cowsay/reference/animal_fetch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch an animal — animal_fetch","text":"(character) animal get","code":""},{"path":"https://sckott.github.io/cowsay/reference/animal_fetch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch an animal — animal_fetch","text":"single string","code":""},{"path":"https://sckott.github.io/cowsay/reference/animal_fetch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fetch an animal — animal_fetch","text":"","code":"animal_fetch(\"longtailcat\") #> [1] \"\\n     /\\\\-/\\\\\\n    /a a  \\\\                                 _\\n   =\\\\ Y  =/-~~~~~~-,_______________________/ )\\n     ‛^--‛          ________________________/\\n       \\\\           /\\n       ||  |---‛\\\\  \\\\\\n  jgs  (_(__|   ((__|\" cat(animal_fetch(\"longtailcat\")) #>  #>      /\\-/\\ #>     /a a  \\                                 _ #>    =\\ Y  =/-~~~~~~-,_______________________/ ) #>      ‛^--‛          ________________________/ #>        \\           / #>        ||  |---‛\\  \\ #>   jgs  (_(__|   ((__| animal_fetch(\"poop\") #> [1] \"\\n     (   )\\n  (   ) (\\n   ) _   )\\n    ( \\\\_\\n  _(_\\\\ \\\\)__\\n (____\\\\ ___)) [nosig]\" cat(animal_fetch(\"poop\")) #>  #>      (   ) #>   (   ) ( #>    ) _   ) #>     ( \\_ #>   _(_\\ \\)__ #>  (____\\ ___)) [nosig]"},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":null,"dir":"Reference","previous_headings":"","what":"Animals — animals","title":"Animals — animals","text":"Named vector animals","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Animals — animals","text":"animals named character vector animals, element character string variable length specifying ASCII animal. Note unicode characters play well operating systems.","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animals — animals","text":"","code":"animals #>  [1] \"alligator\"    \"ant\"          \"anxiouscat\"   \"bat\"          \"bat2\"         #>  [6] \"beavis\"       \"behindcat\"    \"bigcat\"       \"blowfish\"     \"buffalo\"      #> [11] \"cat\"          \"chicken\"      \"chuck\"        \"clippy\"       \"cow_borg\"     #> [16] \"cow_dead\"     \"cow_greedy\"   \"cow_sleepy\"   \"cow_tired\"    \"cow_wired\"    #> [21] \"cow_young\"    \"cow\"          \"daemon\"       \"dragon\"       \"duck\"         #> [26] \"duckling\"     \"egret\"        \"endlesshorse\" \"facecat\"      \"fish\"         #> [31] \"frog\"         \"ghost\"        \"goldfish\"     \"grumpycat\"    \"hypnotoad\"    #> [36] \"longcat\"      \"longtailcat\"  \"monkey\"       \"mushroom\"     \"owl\"          #> [41] \"pig\"          \"poop\"         \"pumpkin\"      \"rabbit\"       \"shark\"        #> [46] \"shortcat\"     \"signbunny\"    \"smallcat\"     \"snowman\"      \"spider\"       #> [51] \"squirrel\"     \"squirrel2\"    \"stegosaurus\"  \"stretchycat\"  \"trilobite\"    #> [56] \"turkey\"       \"whale\"        \"wolf\"         \"yoda\"         cat(animal_fetch('cow')) #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || cat(animal_fetch('chicken')) #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] cat(animal_fetch('chucknosig] cat(animal_fetch('clippy')) #>  #>     _ #>    / \\ #>    | | #>    @ @ #>   || || #>   || || #>   |\\_/| #>   \\___/ GB cat(animal_fetch('poop')) #>  #>      (   ) #>   (   ) ( #>    ) _   ) #>     ( \\_ #>   _(_\\ \\)__ #>  (____\\ ___)) [nosig] cat(animal_fetch('bigcat')) #>  #>                 \\`*-. #>                  )  _`-. #>                 .  : `. . #>                 : _   '  \\ #>                 ; *` _.   `*-._ #>                 `-.-'          `-. #>                   ;       `       `. #>                   :.       .       \\ #>                   .\\  .   :   .-'   . #>                   '  `+.;  ;  '      : #>                   :  '  |    ;       ;-. #>                   ; '   : :`-:     _.`* ; #>                .*' /  .*' ; .*`- +'  `*' #>      [bug]     `*-*   `*-*  `*-*'"},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":null,"dir":"Reference","previous_headings":"","what":"Thought/speech bubble/balloon — bubble_say","title":"Thought/speech bubble/balloon — bubble_say","text":"Thought/speech bubble/balloon","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Thought/speech bubble/balloon — bubble_say","text":"","code":"bubble_say(x, width = 60)  bubble_think(x, width = 60)"},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Thought/speech bubble/balloon — bubble_say","text":"x (character) character vector width (integer/numeric) width line. default: 60","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Thought/speech bubble/balloon — bubble_say","text":"character vector length greater input x","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Thought/speech bubble/balloon — bubble_say","text":"bubble_say gives traditional bubble get run cowsay command line, carrots slashes sides, bubble_think gives slightly different bubble parens sides","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Thought/speech bubble/balloon — bubble_say","text":"modified https://github.com/schochastics/startifyR","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/reference/bubble_say.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Thought/speech bubble/balloon — bubble_say","text":"","code":"library(fortunes) quote <- as.character(fortune()) bubble_say(x = quote) #>  [1] \"\"                                                          #>  [2] \" ______________________________________________________ \"  #>  [3] \"/ Warning: Although abusing R was not proved to be     \\\\\" #>  [4] \"| addictive, it should be noted that it often leads to |\"  #>  [5] \"| harder stuff.                                        |\"  #>  [6] \"| Ivan Mizera (self-confessed abuseR)                  |\"  #>  [7] \"| NA                                                   |\"  #>  [8] \"| useR! 2006, Vienna                                   |\"  #>  [9] \"\\\\ June 2006                                            /\" #> [10] \" ------------------------------------------------------ \"   cat(bubble_say(paste(quote, collapse = \" \")), sep = \"\\n\") #>  #>  ______________________________________________________  #> / Warning: Although abusing R was not proved to be     \\ #> | addictive, it should be noted that it often leads to | #> | harder stuff. Ivan Mizera (self-confessed abuseR) NA | #> \\ useR! 2006, Vienna June 2006                         / #>  ------------------------------------------------------  ch <- animal_fetch('chicken') z <- paste(c(bubble_say(quote), bubble_tail(ch, \"\\\\\"), ch), collapse = \"\\n\") cat(z) #>  #>  ______________________________________________________  #> / Warning: Although abusing R was not proved to be     \\ #> | addictive, it should be noted that it often leads to | #> | harder stuff.                                        | #> | Ivan Mizera (self-confessed abuseR)                  | #> | NA                                                   | #> | useR! 2006, Vienna                                   | #> \\ June 2006                                            / #>  ------------------------------------------------------  #>       \\ #>        \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] if (FALSE) { # rlang::is_installed(\"fortunes\") && interactive() text_color <- sample(grDevices::colors(), 1) text_style <- crayon::make_style(text_color) text_style(bubble_say(quote)) }"},{"path":"https://sckott.github.io/cowsay/reference/bubble_tail.html","id":null,"dir":"Reference","previous_headings":"","what":"Make the tail part of a thought bubble — bubble_tail","title":"Make the tail part of a thought bubble — bubble_tail","text":"Make tail part thought bubble","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_tail.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make the tail part of a thought bubble — bubble_tail","text":"","code":"bubble_tail(animal, thought_sym = \"o\")  bubble_tail2(max_char_length, thought_sym = \"o\")"},{"path":"https://sckott.github.io/cowsay/reference/bubble_tail.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make the tail part of a thought bubble — bubble_tail","text":"animal (character) string thought_sym (character) scalar character use speech bubble tail (see https://en.wikipedia.org/wiki/Speech_balloon). default: \"o\" max_char_length (numeric) length maximum line. used determine much whitespace padding add left thought_sym","code":""},{"path":"https://sckott.github.io/cowsay/reference/bubble_tail.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make the tail part of a thought bubble — bubble_tail","text":"bubble_tail uses animal input tail put close top animal, whereas bubble_tail2 just puts tail 1/3 way left character given max character length","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/reference/bubble_tail.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make the tail part of a thought bubble — bubble_tail","text":"","code":"bubble_tail(animal_fetch('chicken')) #> [1] \"      o\"  \"       o\" cat(bubble_tail(animal_fetch('chicken')), sep = \"\\n\") #>       o #>        o cat(bubble_tail(animal_fetch('chicken')), sep = \"\\n\") #>       o #>        o cat(bubble_tail(animal_fetch('chicken'), \"%\"), sep = \"\\n\") #>       % #>        %  bubble_tail2(59) #> [1] \"                    o\"  \"                     o\" cat(bubble_tail2(59), sep = \"\\n\") #>                     o #>                      o cat(bubble_tail2(11), sep = \"\\n\") #>     o #>      o cat(bubble_tail2(11, \"%\"), sep = \"\\n\") #>     % #>      %"},{"path":"https://sckott.github.io/cowsay/reference/cowsay-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","title":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","text":"Allows printing character strings messages/warnings/etc. ASCII animals, including cats, cows, frogs, chickens, ghosts, .","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/reference/cowsay-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","text":"Maintainer: Scott Chamberlain myrmecocystus@gmail.com Authors: Amanda Dobbyn amanda.e.dobbyn@gmail.com contributors: Tyler Rinker [contributor] Thomas Leeper [contributor] Noam Ross [contributor] Rich FitzJohn [contributor] Carson Sievert [contributor] Kiyoko Gotanda [contributor] Andy Teucher [contributor] Karl Broman [contributor] Franz-Sebastian Krah [contributor] Lucy D'Agostino McGowan [contributor] Guangchuang Yu [contributor] Philipp Boersch-Supan [contributor] Andreas Brandmaier [contributor] Marion Louveaux [contributor] David Schoch [contributor]","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":null,"dir":"Reference","previous_headings":"","what":"Endless horse — endless_horse","title":"Endless horse — endless_horse","text":"time press enter, horse keeps going...going...","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endless horse — endless_horse","text":"","code":"endless_horse(   what = \"Hello world!\",   endless = TRUE,   wait = 0.5,   what_color = NULL,   horse_color = NULL )"},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Endless horse — endless_horse","text":"(character) want say? See details. endless (logical) horse endless, better say yes. Default: TRUE wait long wait leg segments (time grows geometrically first iteration order keep horse screen , keep going forever.  hit escape/Ctrl-C depending platform). what_color (character crayon function) crayon-suported text color crayon style function color . might try colors() ?rgb ideas. horse_color (character crayon function) crayon-suported text color crayon style function color steed.","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Endless horse — endless_horse","text":"","code":"endless_horse(endless = FALSE) #>  #>  ______________  #> < Hello world! > #>  --------------  #>     \\ #>      \\ #>  #>        , #>     _,,)\\.~,,._ #>      (()`  ``)\\))),,_ #>       |     \\ ''((\\)))),,_          ____ #>       |6`   |   ''((\\())) \"-.____.-\"    `-.-, #>       |    .'\\    ''))))'                  \\))) #>       |   |   `.     ''                     (((( #>       \\, _)     \\/                          |)))) #>        `'        |                          ((((( #>                  \\                  |       )))))) #>                   `|    |           ,\\     /(((((( #>                    |   / `-.______.<  \\   |  ))))) #>                    |   |  /         `. \\  \\  (((( #>                    |  / \\ |           `.\\  | ((( #>                    \\  | | |             )| |  )) #>                     | | | |             || |  '   [endless.horse] #>                     | | | |             || | if (FALSE) { # interactive() endless_horse() endless_horse(what_color = crayon::bgBlue) }"},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":null,"dir":"Reference","previous_headings":"","what":"Sling messages and warnings with flair — say","title":"Sling messages and warnings with flair — say","text":"Sling messages warnings flair","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sling messages and warnings with flair — say","text":"","code":"say(   what = \"Hello world!\",   by = \"cow\",   type = NULL,   what_color = NULL,   by_color = what_color,   length = 18,   fortune = NULL,   width = 60,   ... )  think(   what = \"Hello world!\",   by = \"cow\",   type = NULL,   what_color = NULL,   by_color = what_color,   length = 18,   fortune = NULL,   width = 60,   ... )"},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sling messages and warnings with flair — say","text":"(character) want say? See Details. (character) say think ? One : alligator, ant, anxiouscat, bat, bat2, beavis, behindcat, bigcat, blowfish, buffalo, cat, chicken, chuck, clippy, cow, cow_borg, cow_dead, cow_greedy, cow_sleepy, cow_tired, cow_wired, cow_young, daemon, dragon, duck, duckling, egret, endlesshorse, facecat, fish, frog, ghost, goldfish, grumpycat, hypnotoad, longcat, longtailcat, monkey, mushroom, owl, pig, poop, pumpkin, rabbit, rms, shark, shortcat, signbunny, smallcat, snowman, spider, squirrel, squirrel2, stegosaurus, stretchycat, trilobite, turkey, whale, wolf, yoda. Alternatively, use 'random' message spoken random character.  use rlang::arg_match() internally, support partial matching, get informative error upon partial match. type (character) One message (default), warning, print (default non-interactive mode), string (returns string). run non-interactive mode default type print, output goes stdout rather stderr, messages warnings go. what_color (character crayon function) One crayon-suported text color(s) crayon style function color . might try colors() ?rgb ideas. Use \"rainbow\" c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"). by_color (character crayon function) One crayon-suported text color(s) crayon style function color . Use \"rainbow\" c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"). default set whatever color what_color can color less typing. length (integer) Length longcat. Ignored animals used. fortune integer (number can coerced integer) specifying fortune fortunes package - string used pattern passed grep() (random one selected upton multiple matches). Passed parameter fortunes::fortune width (integer/numeric) width line. default: 60 ... args passed fortunes::fortune()","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"what","dir":"Reference","previous_headings":"","what":"what","title":"Sling messages and warnings with flair — say","text":"can put phrase like parameter, can type one special phrases particular things. : \"catfact\": random cat fact https://catfact.ninja \"fortune\": random quote R coder, fortunes library \"time\": Print current time \"rms\": Prints random 'fact' Richard Stallman rmsfact::rmsfact() package. Best paired = \"rms\".","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"by","dir":"Reference","previous_headings":"","what":"by","title":"Sling messages and warnings with flair — say","text":"Note choose ='hypnotoad' quote forced , imagine, 'Glory HYPNO TOAD!'. reference see http://knowyourmeme.com/memes/hypnotoad signbunny: sure known invented signbunny, article http://www.vox.com/2014/9/18/6331753/sign-bunny-meme-explained thinks found first use tweet: https://twitter.com/wei_bluebear/status/329101645780770817 trilobite: http://www.retrojunkie.com/asciiart/animals/dinos.htm (site though) Note Windows users: animals (shortcat, longcat, fish, signbunny, stretchycat, anxiouscat, longtailcat, grumpycat, mushroom) available use non-ASCII characters display properly R Windows.","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sling messages and warnings with flair — say","text":"","code":"say() #>  #>  ______________  #> < Hello world! > #>  --------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"what\") #>  #>  ______  #> < what > #>  ------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"time\") #>  #>  ____________________________  #> < 2025-03-28 22:16:11.775834 > #>  ----------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      ||  say(\"who you callin chicken\", \"chicken\") #>  #>  ________________________  #> < who you callin chicken > #>  ------------------------  #>       \\ #>        \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] say(\"ain't that some shit\", \"poop\") #>  #>  ______________________  #> < ain't that some shit > #>  ----------------------  #>      \\ #>       \\ #>  #>      (   ) #>   (   ) ( #>    ) _   ) #>     ( \\_ #>   _(_\\ \\)__ #>  (____\\ ___)) [nosig] say(\"icanhazpdf?\", \"cat\") #>  #>  _____________  #> < icanhazpdf? > #>  -------------  #>          \\ #>           \\ #>  #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) say(\"boo!\", \"pumpkin\") #>  #>  ______  #> < boo! > #>  ------  #>                \\ #>                 \\ #>  #>                   ___ #>                ___)__|_ #>           .-*'          '*-, #>          /      /|   |\\     \\ #>         ;      /_|   |_\\     ; #>         ;   |\\           /|  ; #>         ;   | ''--...--'' |  ; #>          \\  ''---.....--''  / #>           ''*-.,_______,.-*'  [nosig] say(\"hot diggity\", \"frog\") #>  #>  _____________  #> < hot diggity > #>  -------------  #>      \\ #>       \\ #>  #>         (.)_(.) #>      _ (   _   ) _ #>     / \\/`-----'\\/ \\ #>   __\\ ( (     ) ) /__ #>   )   /\\ \\._./ /\\   ( #>    )_/ /|\\   /|\\ \\_(  [nosig]  # Vary type of output, default calls message() say(\"hell no!\") #>  #>  __________  #> < hell no! > #>  ----------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hell no!\", type = \"warning\") #> Warning:  #>  __________  #> < hell no! > #>  ----------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hell no!\", type = \"string\") #> [1] \"\\n __________ \\n< hell no! >\\n ---------- \\n      \\\\\\n       \\\\\\n\\n        ^__^ \\n        (oo)\\\\ ________ \\n        (__)\\\\         )\\\\ /\\\\ \\n             ||------w|\\n             ||      ||\"  # The hypnotoad say(by = \"hypnotoad\") #>  #>  ______________________________  #> < All Glory to the HYPNO TOAD! > #>  ------------------------------  #>                 \\ #>                  \\ #>  #>                 ,'``.._   ,'``. #>                 :,--._:)\\,:,._,.: #>                 :`--,''   :`...';\\ #>                `,'       `---'  `. #>                /                 : #>               /                   \\ #>             ,'                     :\\.___,-. #>            `...,---'``````-..._    |:       \\ #>              (                 )   ;:    )   \\  _,-. #>               `.              (   //          `'    \\ #>                :               `.//  )      )     , ; #>              ,-|`.            _,'/       )    ) ,' ,' #>             (  :`.`-..____..=:.-':     .     _,' ,' #>              `,'\\ ``--....-)='    `._,  \\  ,') _ '``._ #>           _.-/ _ `.       (_)      /     )' ; / \\ \\`-.' #>          `--(   `-:`.     `' ___..'  _,-'   |/   `.) #>              `-. `.`.``-----``--,  .' #>                |/`.\\`'        ,','); SSt #>                    `         (/  (/  # Trilobite say(by = \"trilobite\") #>  #>  ______________  #> < Hello world! > #>  --------------  #>        \\ #>         \\ #>  #>           _____ #>        .'` ,-. `'. #>       /   ([ ])   \\ #>      /.-\"\"`(`)`\"\"-.\\ #>       <'```(.)```'> #>       <'```(.)```'> #>        <'``(.)``'> #>    sk   <``\\_/``> #>          `'---'`  # Shark say(\"Q: What do you call a solitary shark\\nA: A lone shark\", by = \"shark\") #>  #>  ______________________________________________________  #> < Q: What do you call a solitary shark A: A lone shark > #>  ------------------------------------------------------  #>            \\ #>             \\ #>  #>               /\"\"-._ #>               .       '-, #>                :          '', #>                 ;      *     '. #>                  ' *         () '. #>                    \\               \\ #>                     \\      _.---.._ '. #>                     :  .' _.--''-''  \\ ,' #>         .._           '/.'             . ; #>         ; `-.          ,                \\' #>          ;   `,         ;              ._\\ #>           ;    \\     _,-'                ''--._ #>           :    \\_,-'                          '-._ #>           \\ ,-'                       .          '-._ #>           .'         __.-'';            \\...,__       '. #>         .'      _,-'        \\              \\   ''--.,__  '\\ #>         /    _,--' ;         \\              ;           \\^.} #>         ;_,-' )     \\  )\\      )            ; #>              /       \\/  \\_.,-'             ; #>             /                              ; #>          ,-'  _,-'''-.    ,-.,            ;      PFA #>       ,-' _.-'        \\  /    |/'-._...--' #>      :--``             )/ #>   '  # Buffalo say(\"Q: What do you call a single buffalo?\\nA: A buffalonely\", by = \"buffalo\") #>  #>  ________________________________________________________  #> < Q: What do you call a single buffalo? A: A buffalonely > #>  --------------------------------------------------------  #>                 \\ #>                  \\ #>  #>                    _.-````'-,_ #>          _,.,_ ,-'`           `'-.,_ #>        /)     (                   '``-. #>       ((      ) )                      `\\ #>         \\)    (_/                        )\\ #>         |       /)           '    ,'    / \\ #>         `\\    ^'            '     (    /  )) #>           |      _/\\ ,     /    ,,`\\   (  \"` #>           \\Y,   |   \\  \\  | ````| / \\_ \\ #>             `)_/      \\  \\  )    ( >  ( > #>                        \\( \\(     |/   |/ #>           mic & dwb  /_(/_(    /_(  /_(  # Using fortunes library(fortunes) say(what = \"fortune\") #>  #>  ________________________________________________________  #> / 1st mail: One of the reasons that SAM is popular, is   \\ #> | that it is popular (i.e. since everyone has heard of   | #> | it, it makes reviewers happy). So, it would be nice to | #> | be able to point to publications in good journals so   | #> | that reviewers will be comfortable. (I personally, am  | #> | quite comfortable with SAM). 2nd mail: Oops, must have | #> | been a Freudian slip. Actually, I am not perfectly     | #> | comfortable with SAM. But I am quite comfortable with  | #> | limma.  Naomi Altman answering the question whether    | #> | anyone had published data using limma for microarray   | #> \\ analysis bioconductor June 2004                        / #>  --------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || ## you don't have to pass anything to the `what` parameter if `fortune` is ## not null say(\"fortune\", \"spider\") #>  #>  _________________________________________________________  #> / The existence of a method is not a sufficient reason to \\ #> | use that method.  Jari Oksanen about relative           | #> | advantages of several multivariate analysis methods     | #> \\ R-SIG-Ecology November 2013                             / #>  ---------------------------------------------------------  #>            \\ #>             \\ #>  #>               | #>               | #>               | #>              __ #>           | /  \\ | #>          \\_\\\\  //_/ #>           .'/()\\'. #>            \\\\  //  [nosig] say(\"fortune\", \"facecat\") #>  #>  _________________________________________________________  #> / Seldom are prizes, credit, and gratitude given, else    \\ #> | Brian would be drowning in them.  Anthony Rossini about | #> \\ the merits of implementing software R-help May 2004     / #>  ---------------------------------------------------------  #>        \\ #>         \\ #>  #>          /\\ /\\ #>          (O o) #>         =(:^:)= #>            U      [nosig] say(\"fortune\", \"behindcat\") #>  #>  _________________________________________________________  #> / 3-D bar plots are an abomination. Just because Excel    \\ #> | can do them doesn't mean you should. (Dismount pulpit). | #> \\ Berton Gunter R-help October 2007                       / #>  ---------------------------------------------------------  #>          \\ #>           \\ #>  #>             |\\___/| #>             )     ( #>            =\\     /= #>              )===( #>             /     \\ #>             |     | #>            /       \\ #>            \\       / #>       jgs   \\__  _/ #>               ( ( #>                ) ) #>               (_( say(\"fortune\", \"smallcat\") #>  #>  _________________________________________________________  #> / If anything, there should be a Law: Thou Shalt Not Even \\ #> | Think Of Producing A Graph That Looks Like Anything     | #> | From A Spreadsheet.  Ted Harding in a discussion about  | #> \\ producing graphics R-help August 2007                   / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>          /\\_/\\ #>         ( o.o ) #>          > ^ <      [nosig] say(\"fortune\", \"monkey\") #>  #>  ________________________________________________________  #> / If you imagine that this pen is Trellis, then Lattice  \\ #> | is not this pen.  Paul Murrell on the difference of    | #> | Lattice (which eventually was called grid) and Trellis | #> \\ DSC 2001, Wien March 2001                              / #>  --------------------------------------------------------  #>                \\ #>                 \\ #>  #>                   .=\"=. #>                 _/.-.-.\\_     _ #>                ( ( o o ) )    )) #>                 |/  \"  \\|    // #>                  \\'---'/    // #>            jgs   /`\"\"\"`\\\\  (( #>                 / /_,_\\ \\\\  \\\\ #>                 \\_\\_'__/  \\  )) #>                 /`  /`~\\   |// #>                /   /    \\  / #>           ,--`,--'\\/\\    / #>           '-- \"--'  '--' say(\"fortune\", \"egret\") #>  #>  _________________________________________________________  #> / [Listing original copyright holders in R packages is]   \\ #> | especially useful if there are areas of doubt and       | #> | uncertainty (eg code published on ftp sites before      | #> | people worried about licenses), since it at least gives | #> | you rigidly defined areas of doubt and uncertainty.[5]  | #> | [5] Adams D, (1978) Hitchhiker's Guide. BBC Radio.      | #> | Thomas Lumley in a discussion about copyright vs.       | #> \\ licenses R-devel January 2010                           / #>  ---------------------------------------------------------  #>         \\ #>          \\ #>  #>            _, #>       -==<' ` #>           ) / #>          / (_. #>         |  ,-,`\\ #>          \\\\   \\ \\ #>           `\\,  \\ \\ #>            ||\\  \\`|, #>  jgs      _|| `=`-' #>          ~~`~` say(fortune = 10) #>  #>  _______________________________________________________  #> / Overall, SAS is about 11 years behind R and S-Plus in \\ #> | statistical capabilities (last year it was about 10   | #> | years behind) in my estimation.  Frank Harrell (SAS   | #> \\ User, 1969-1991) R-help September 2003                / #>  -------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(fortune = 100) #>  #>  _________________________________________________________  #> / I'm not sure I'd trust any computer recommendation from \\ #> | 1976, no matter how famous the authors are.  Peter      | #> | Dalgaard after Samuel Edward Kemp cited a               | #> | recommendation about nonlinear least squares computer   | #> \\ programs from 'Box-Jenkins, 1976' R-help January 2005   / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(fortune = \"whatever\") #>  #>  _________________________________________________________  #> / Justin: Is there a function that just does whatever I'm \\ #> | thinking (aka whatever my homework question is...)?     | #> | Joshua Ulrich: That's the magic_pony function.  Justin  | #> \\ and Joshua Ulrich stackoverflow.com June 2013           / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(fortune = 7) #>  #>  ____________________________________________________  #> / What we have is nice, but we need something very   \\ #> | different.  Robert Gentleman Statistical Computing | #> \\ 2003, Reisensburg June 2003                        / #>  ----------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(fortune = 45) #>  #>  _________________________________________________________  #> / It seems to me against the spirit of Open Source        \\ #> | software to attempt to monitor distribution. We could   | #> | ask R to 'call home' on first use (in the way e.g. pine | #> | does) but I suspect many users would find that          | #> | objectionable.  Brian D. Ripley in a discussion about   | #> | trying to estimate the number of R users R-help April   | #> \\ 2004                                                    / #>  ---------------------------------------------------------  #>       \\ #>        \\ #>  #>         ^__^  #>         (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || # Clippy say(fortune = 59, by = \"clippy\") #>  #>  ________________________________________________________  #> / Let's not kid ourselves: the most widely used piece of \\ #> | software for statistics is Excel.  Brian D. Ripley     | #> | 'Statistical Methods Need Software: A View of          | #> | Statistical Computing' Opening lecture RSS 2002,       | #> \\ Plymouth September 2002                                / #>  --------------------------------------------------------  #>  \\ #>   \\ #>  #>     _ #>    / \\ #>    | | #>    @ @ #>   || || #>   || || #>   |\\_/| #>   \\___/ GB library(rmsfact) say(\"rms\", \"rms\") #>  #>  ________________________________________________________  #> / Richard Stallman is licensed under GPL, so you can     \\ #> | clone him and redistribute copies so you can help your | #> | neighbor. For example a version that take a bath more  | #> \\ often.                                                 / #>  --------------------------------------------------------  #>                   \\ #>                    \\ #>  #>                     @@@@@@ @ #>                   @@@@     @@ #>                  @@@@ =   =  @@  #>                 @@@ @ _   _   @@  #>                  @@@ @(0)|(0)  @@  #>                 @@@@   ~ | ~   @@ #>                 @@@ @  (o1o)    @@ #>                @@@    #######    @ #>                @@@   ##{+++}##   @@ #>               @@@@@ ## ##### ## @@@@ #>               @@@@@#############@@@@ #>              @@@@@@@###########@@@@@@ #>             @@@@@@@#############@@@@@ #>             @@@@@@@### ## ### ###@@@@ #>              @ @  @              @  @ #>                @                    @ # Using the catfacts API library(jsonlite) say(\"catfact\", \"cat\") #>  #>  ________________________________________________________  #> / Grown cats have 30 teeth. Kittens have about 26        \\ #> | temporary teeth, which they lose when they are about 6 | #> \\ months old.                                            / #>  --------------------------------------------------------  #>          \\ #>           \\ #>  #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_)"},{"path":"https://sckott.github.io/cowsay/reference/say_think.html","id":null,"dir":"Reference","previous_headings":"","what":"say/think factory — say_think","title":"say/think factory — say_think","text":"say/think factory","code":""},{"path":"https://sckott.github.io/cowsay/reference/say_think.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"say/think factory — say_think","text":"","code":"say_think(thought_sym, say_or_think)"},{"path":"https://sckott.github.io/cowsay/reference/say_think.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"say/think factory — say_think","text":"thought_sym (character) scalar character use speech bubble tail (see https://en.wikipedia.org/wiki/Speech_balloon). default: \"o\" say_or_think (character)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-development-version","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay (development version)","text":"change top bubble underscores hyphens (#98)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-100","dir":"Changelog","previous_headings":"","what":"cowsay 1.0.0","title":"cowsay 1.0.0","text":"CRAN release: 2024-12-05","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"","what":"BREAKING CHANGES","title":"cowsay 1.0.0","text":"Though may cause code fail/etc. bubbles changed match original cowsay program created Perl - say function new think function. breaking sense output say fundamentally different assuming care ascii art. say color args change: by_color param now default whatever set what_color - allowing setting one color quote animal. colors supplied behavior unchanged previous version. (#85) Imports changed. rmsfact fortunes previously Imports now Suggests fact needed main use case package. Simply load need package helps needed.","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-1-0-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 1.0.0","text":"new function think() duplicate cowthink function command line cowsay - different bubble sides tail (see examples) (#93) user (@oganm) suggested removing speech bubble ascii art - agree! say refactored, now using separate new functions bubble_say/bubble_think bubble_tail construct quote/speech bubble tail. tail bubble animal changed position attempts position makes sense specific animal. can use separate new functions manually say think . See docs details (?bubble_say/?bubble_tail) (#67) New special variants cows added match original cowsay command line flags -b, -d, -g, -s, -t, -w, -y, refer Borg, dead, greedy, sleepy, tired, wired, young appearance modes cow, respectively. Instead adding new parameter (trying avoid parameter bloat) - since just cow - can get cow variants supplying animal cow + dead “cow_dead” example, instead just “cow”.","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-1-0-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay 1.0.0","text":"Added notes history cowsay readme (#94) remove multicolor package good ’s coming back CRAN (#90)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-1-0-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 1.0.0","text":"stegosaurus fixed! apparently ascii art stegosaurus package diplodocus. thanks @stochastics ! (#88)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-090","dir":"Changelog","previous_headings":"","what":"cowsay 0.9.0","title":"cowsay 0.9.0","text":"CRAN release: 2023-11-02 remove multicolor temporarily longer CRAN (#86) use new special “sentinel” “PACKAGE” prefixed underscore package level manual file (84) new animals alligator, goldfish, stegosaurus, whale, wolf @harriscw (#79)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-082","dir":"Changelog","previous_headings":"","what":"cowsay 0.8.2","title":"cowsay 0.8.2","text":"CRAN release: 2023-03-08 makes sure use suggested package multicolor conditionally throughout package (tests, examples, vignettes)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.8","text":"say() parameter loses fillerama options (“arresteddevelopment”, “doctorwho”, “dexter”, “futurama”, “holygrail”, “simpsons”, “starwars”, “loremipsum”) API gains two squirrels squirrel squirrel2 (#74) @marionlouveaux gains chuck norris chuck (#62) @bgreenwell type parameter say() gains new option print, default option non-interactive environments. type=\"print\" cat() output (#70) (#72)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-0-8","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay 0.8","text":"standardize spacing first line animals (#68) (#69) add examples readme using colors (#73)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.8","text":"fix use colors: colors can used certain computing environments, tell users set colors NULL (#65) (#66)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-7","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.7","text":"cowsay now supports colors via multicolor package Amanda Dobbyn. supports coloring thing said (new what_color parameter) thing saying (new by_color parameter). supports one color. thanks Amanda! (#59) (#61)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.6","text":"Fix catfact API usage (#56) (#57)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.5","text":"@ateucher added support rmsfact package, random facts Richard Stallman (#45) turkey animal added @jeremycg , thanks Jeremy! (#46) @LucyMcGowan added monkey, thanks Lucy! (#47) @GuangchuangYu added BSD daemon, also called “beastie”, thank much! (#48) (#49) @onertipaday added support quotes http://fillerama.io/ service quotes Futurama, Star Wars, Dexter, Monty Python, Doctor , . Thanks Paolo! (#51)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-0-5","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay 0.5","text":"removed broken link readme pkg (#43) thanks @apjanke","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.5","text":"@ateucher fixed problem windows (#40) @florianm fixed spelling error (#41) (#42)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-04","dir":"Changelog","previous_headings":"","what":"cowsay 0.4","title":"cowsay 0.4","text":"First release CRAN","code":""}]
