[{"path":"https://sckott.github.io/cowsay/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"NA","text":"’re looking ASCII art can recognized immediately. ’d like stay away ASCII art ’s hard tell thing . Ask , R users know thing ? , may useful make art detailed consider using different piece art. Exceptions case case basis.","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"out-of-scope","dir":"","previous_headings":"Scope","what":"Out of scope","title":"NA","text":"specific people (exceptions case case basis, e.g. cowsay: rms) drug references profanity demeaning/caricaturing group people","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"size","dir":"","previous_headings":"Scope","what":"Size","title":"NA","text":"Art must bigger following three examples: hypnotoad, shark, bat2","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"not-sure-about-scope","dir":"","previous_headings":"Scope","what":"Not sure about scope?","title":"NA","text":"opening pull request, ’s good idea open issue check idea scope.","code":""},{"path":"https://sckott.github.io/cowsay/CONTRIBUTING.html","id":"contributing-code-to-cowsay","dir":"","previous_headings":"","what":"Contributing code to cowsay","title":"NA","text":"Fork repo Add ascii art animal animals vector animals.r - just follow examples, try execute code character console looks right. careful use auto-indenting editor file wreck formatting animals. animal contains non-ascii characters, display properly Windows. Please add list animals don’t work Windows @details section help say function. Push back account, send pull request sckott/cowsay. want submit issue, go issues page .","code":""},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Introduction to cowsay","text":"Stable version CRAN dev version GitHub","code":"install.packages(\"cowsay\") remotes::install_github(\"sckott/cowsay\") library(cowsay)"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"the-animals","dir":"Articles","previous_headings":"","what":"The animals","title":"Introduction to cowsay","text":"animals, ascii creatures, single named character vector exported package. Thus, can access animal , whatever want . writing, 49 animals. names animals: example, access cow","code":"sort(names(animals)) #>  [1] \"alligator\"    \"ant\"          \"anxiouscat\"   \"bat\"          \"bat2\"         #>  [6] \"behindcat\"    \"bigcat\"       \"buffalo\"      \"cat\"          \"chicken\"      #> [11] \"chuck\"        \"clippy\"       \"cow\"          \"daemon\"       \"duck\"         #> [16] \"duckling\"     \"egret\"        \"endlesshorse\" \"facecat\"      \"fish\"         #> [21] \"frog\"         \"ghost\"        \"goldfish\"     \"grumpycat\"    \"hypnotoad\"    #> [26] \"longcat\"      \"longtailcat\"  \"monkey\"       \"mushroom\"     \"owl\"          #> [31] \"pig\"          \"poop\"         \"pumpkin\"      \"rabbit\"       \"shark\"        #> [36] \"shortcat\"     \"signbunny\"    \"smallcat\"     \"snowman\"      \"spider\"       #> [41] \"squirrel\"     \"squirrel2\"    \"stegosaurus\"  \"stretchycat\"  \"trilobite\"    #> [46] \"turkey\"       \"whale\"        \"wolf\"         \"yoda\" cow <- animals[['cow']] cat(cow) #>  #>  -----  #> %s  #>  ------  #>     \\   ^__^  #>      \\  (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      ||"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"say-something","dir":"Articles","previous_headings":"","what":"Say something","title":"Introduction to cowsay","text":"expose function say() package, can use envoke animal package, make say whatever want. examples: ’s special time, print time","code":"say(\"why did the chicken cross the road\", \"chicken\") #>  #>  -----  #> why did the chicken cross the road  #>  ------  #>     \\    #>      \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] #> say(\"boo!\", \"ghost\") #>  #>  -----  #> boo!  #>  ------  #>     \\    #>      \\ #>      .-. #>     (o o) #>     | O \\ #>      \\   \\ #>       `~~~' [nosig] #> say(\"nope, don't do that\", type = \"warning\") #> Warning in say(\"nope, don't do that\", type = \"warning\"):  #>  --------------  #> nope, don't do that  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #> say('time') #>  #>  --------------  #> 2024-10-31 18:28:43.283698  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>"},{"path":"https://sckott.github.io/cowsay/articles/cowsay.html","id":"its-how-you-say-it","dir":"Articles","previous_headings":"","what":"It’s how you say it","title":"Introduction to cowsay","text":"can use say() give back string, message, warning Message Warning String","code":"say(\"hello world\", by = \"cow\") #>  #>  -----  #> hello world  #>  ------  #>     \\   ^__^  #>      \\  (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hello world\", by = \"cow\", type = \"warning\") #> Warning in say(\"hello world\", by = \"cow\", type = \"warning\"):  #>  -----  #> hello world  #>  ------  #>     \\   ^__^  #>      \\  (oo)\\ ________  #>         (__)\\         )\\ /\\  #>              ||------w| #>              ||      || say(\"hello world\", by = \"cow\", type = \"string\") #> [1] \"\\n ----- \\nhello world \\n ------ \\n    \\\\   ^__^ \\n     \\\\  (oo)\\\\ ________ \\n        (__)\\\\         )\\\\ /\\\\ \\n             ||------w|\\n             ||      ||\""},{"path":"https://sckott.github.io/cowsay/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Author, maintainer. Amanda Dobbyn. Author. Tyler Rinker. Contributor. Thomas Leeper. Contributor. Noam Ross. Contributor. Rich FitzJohn. Contributor. Carson Sievert. Contributor. Kiyoko Gotanda. Contributor. Andy Teucher. Contributor. Karl Broman. Contributor. Franz-Sebastian Krah. Contributor. Lucy D'Agostino McGowan. Contributor. Guangchuang Yu. Contributor. Philipp Boersch-Supan. Contributor. Andreas Brandmaier. Contributor. Marion Louveaux. Contributor. David Schoch. Contributor.","code":""},{"path":"https://sckott.github.io/cowsay/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S, Dobbyn (2024). cowsay: Messages, Warnings, Strings Ascii Animals. R package version 0.9.0, https://sckott.github.io/cowsay, https://github.com/sckott/cowsay.","code":"@Manual{,   title = {cowsay: Messages, Warnings, Strings with Ascii Animals},   author = {Scott Chamberlain and Amanda Dobbyn},   year = {2024},   note = {R package version 0.9.0, https://sckott.github.io/cowsay},   url = {https://github.com/sckott/cowsay}, }"},{"path":[]},{"path":"https://sckott.github.io/cowsay/index.html","id":"what-is-this","dir":"","previous_headings":"","what":"What is this?","title":"Messages, Warnings, Strings with Ascii Animals","text":"familiar cowsay cli, know , R. , read . ? ?","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"contributors-alphabetical","dir":"","previous_headings":"","what":"Contributors (alphabetical)","title":"Messages, Warnings, Strings with Ascii Animals","text":"Amanda Dobbyn Andreas Brandmaier Andy Teucher Carson Sievert David Schoch Franz-Sebastian Krah Guangchuang Yu Karl Broman Kiyoko Gotanda Lucy D’Agostino McGowan Marion Louveaux Noam Ross Paolo Sonego Philipp Boersch-Supan Rich FitzJohn Scott Chamberlain Thomas Leeper Tyler Rinker ’s right, takes 18 people make cowsay - ’s hard.","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Messages, Warnings, Strings with Ascii Animals","text":"See CONTRIBUTING.md","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"where-to-find-ascii-animal-art","dir":"","previous_headings":"","what":"Where to find ASCII animal art","title":"Messages, Warnings, Strings with Ascii Animals","text":"Sources look : https://asciiart.website/ - , person collects - mention license, permissions, etc. Permissions ascii art mailing list https://groups.google.com/forum/#!forum/alt.ascii-art say: , let’s go rule: Let’s include found (web) ascii art pkg, include signature , signature, put [nosig] (see ).","code":"As for posting other people's ASCII art,     after a discussion in news:alt.ascii-art       _     ___     the following rules were agreed upon:         #_~`--'__ `===-,     1.  If an ASCII ART picture has initials      `.`.     `#.,//         on it, leave them on when posting it      ,_\\_\\     ## #\\     2.  If an ASCII ART picture doesn't have      `__.__    `####\\         initials on it,  mention  that  you            ~~\\ ,###'~         didn't  draw  it  when  posting  it.              \\##'     3.  If somebody  posts a picture without                  [nosig]         initials and you have an original copy         with initials on, feel free to re-post the original version.         *   The re-post ought not to be taken personally, as we all             know that ASCII art often loses proper credits.             Responses to the re-post are not necessary.      One contributor, name of Krogg, suggested the following:      1.) Ultra polite:...ya make yer own ascii and use it.     2.)  Very polite:...Ya contact the author and ask if ya                         can use it...     3.)       polite:...Ya use it but you keep the Credits                         in there like they should be.     4.)         rude:...Ya use it and strip credits.     5.)    Very rude:...Ya use it and claim that it Is                         _Your_ very own creation..."},{"path":"https://sckott.github.io/cowsay/index.html","id":"quick-watch-start","dir":"","previous_headings":"","what":"Quick watch start","title":"Messages, Warnings, Strings with Ascii Animals","text":"Asciicast: https://asciinema.org//7745","code":""},{"path":"https://sckott.github.io/cowsay/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Messages, Warnings, Strings with Ascii Animals","text":"CRAN Dev version","code":"install.packages(\"cowsay\") remotes::install_github(\"sckott/cowsay\")  library(\"cowsay\")"},{"path":"https://sckott.github.io/cowsay/index.html","id":"the-animals","dir":"","previous_headings":"","what":"The animals","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"sort(names(animals)) #>  [1] \"alligator\"    \"ant\"          \"anxiouscat\"   \"bat\"          \"bat2\"         #>  [6] \"behindcat\"    \"bigcat\"       \"buffalo\"      \"cat\"          \"chicken\"      #> [11] \"chuck\"        \"clippy\"       \"cow\"          \"daemon\"       \"duck\"         #> [16] \"duckling\"     \"egret\"        \"endlesshorse\" \"facecat\"      \"fish\"         #> [21] \"frog\"         \"ghost\"        \"goldfish\"     \"grumpycat\"    \"hypnotoad\"    #> [26] \"longcat\"      \"longtailcat\"  \"monkey\"       \"mushroom\"     \"owl\"          #> [31] \"pig\"          \"poop\"         \"pumpkin\"      \"rabbit\"       \"shark\"        #> [36] \"shortcat\"     \"signbunny\"    \"smallcat\"     \"snowman\"      \"spider\"       #> [41] \"squirrel\"     \"squirrel2\"    \"stegosaurus\"  \"stretchycat\"  \"trilobite\"    #> [46] \"turkey\"       \"whale\"        \"wolf\"         \"yoda\""},{"path":"https://sckott.github.io/cowsay/index.html","id":"say-something","dir":"","previous_headings":"","what":"Say Something","title":"Messages, Warnings, Strings with Ascii Animals","text":"Add color:   String styles together crayon-style:  doesn’t preclude adding extra crayon colors string directly.","code":"say('time') #>  #>  --------------  #> 2024-10-11 09:45:13.793342  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>   say(\"ain't that some shit\", \"chicken\") #>  #>  -----  #> ain't that some shit  #>  ------  #>     \\    #>      \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] #> library(crayon)  say(\"boo!\", \"ghost\",      what_color = \"cyan\", by_color = \"saddlebrown\") say(\"I love hooo you are!\", \"owl\",      what_color = rgb(0, 1, 1), by_color = \"#FF0000\") say(what = \"rms\", by = \"rms\",          what_color = yellow$bgMagenta$bold,         by_color = cyan$italic) say(what = paste0(\"hello \", crayon::yellow(\"there \"), crayon::underline(\"world\")),      by = \"trilobite\",      what_color = bgBlue$cyan$italic,     by_color = \"thistle\")  # Don't ask me why \"thistle\" is pink/purple"},{"path":"https://sckott.github.io/cowsay/index.html","id":"vary-type-of-output-default-calls-message","dir":"","previous_headings":"","what":"Vary type of output, default calls message()","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"hell no!\") #>  #>  --------------  #> hell no!  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>   say(\"hell no!\", type=\"warning\") #> Warning in say(\"hell no!\", type = \"warning\"):  #>  --------------  #> hell no!  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>   say(\"hell no!\", type=\"string\") #> [1] \"\\n -------------- \\nhell no! \\n --------------\\n    \\\\\\n      \\\\\\n        \\\\\\n            |\\\\___/|\\n          ==) ^Y^ (==\\n            \\\\  ^  /\\n             )=*=(\\n            /     \\\\\\n            |     |\\n           /| | | |\\\\\\n           \\\\| | |_|/\\\\\\n      jgs  //_// ___/\\n               \\\\_)\\n  \""},{"path":"https://sckott.github.io/cowsay/index.html","id":"catfacts","dir":"","previous_headings":"","what":"Catfacts!!!!","title":"Messages, Warnings, Strings with Ascii Animals","text":"catfacts API https://catfact.ninja","code":"say(\"catfact\", \"cat\") #> -------------- #> When a domestic cat goes after mice, about 1 pounce in 3 results in a catch. #> -------------- #>    \\ #>      \\ #>        \\ #>            |\\___/| #>          ==) ^Y^ (== #>            \\  ^  / #>             )=*=( #>            /     \\ #>            |     | #>           /| | | |\\ #>           \\| | |_|/\\ #>      jgs  //_// ___/ #>               \\_)"},{"path":"https://sckott.github.io/cowsay/index.html","id":"long-cat","dir":"","previous_headings":"","what":"Long cat","title":"Messages, Warnings, Strings with Ascii Animals","text":"Boing Boing tweet 2014-05-10 “twitter.com/BoingBoing/status/465170473194512384” (post may gone)","code":"say(\"it's caturday\", \"longcat\") #>  #>  -----  #> it's caturday  #>  ------  #>     \\    #>      \\ #>     .ﾊ,,ﾊ #>     ( ﾟωﾟ) #>     |つ  つ #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     |    | #>     U \"  U #>         [BoingBoing] #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"grumpy-cat","dir":"","previous_headings":"","what":"Grumpy cat","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say('NO!', by='grumpycat') #>  #>  --------------  #> NO!  #>  -------------- #>     \\ #>       \\ #>         \\ #>       ﾊ _ ﾊ #>       ಠ X ಠ #>   say('WOKE UP TODAY, IT WAS TERRIBLE', by='grumpycat') #>  #>  --------------  #> WOKE UP TODAY, IT WAS TERRIBLE  #>  -------------- #>     \\ #>       \\ #>         \\ #>       ﾊ _ ﾊ #>       ಠ X ಠ #>   say('I HAD FUN ONCE, IT WAS AWFUL', by='grumpycat') #>  #>  --------------  #> I HAD FUN ONCE, IT WAS AWFUL  #>  -------------- #>     \\ #>       \\ #>         \\ #>       ﾊ _ ﾊ #>       ಠ X ಠ #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"bunny-holding-a-sign","dir":"","previous_headings":"","what":"Bunny Holding a sign","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(by='signbunny') #>  #>  --------------  #> Hello world!  #>  -------------- #> (\\__/) || #> (•ㅅ•) || #> /   づ #>           [nosig] #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"fish","dir":"","previous_headings":"","what":"Fish","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(by='fish') #>  #>  -----  #> Hello world!  #>  ------  #>     \\    #>      \\ #>   ><((((º>  ><((((º>  ><((((º>  ><((((º>  ><((((º> #>       Kiyoko Gotanda #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"r-fortunes","dir":"","previous_headings":"","what":"R fortunes","title":"Messages, Warnings, Strings with Ascii Animals","text":"can also pick particular fortune number regex search - fortune parameter NULL don’t pass anything parameter (1st parameter)","code":"say('fortune','cat') #>  #>  --------------  #> If the answer is parse() you should usually rethink the question. #>  Thomas Lumley #>  R-help #>  February 2005  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #> say(fortune=100) #>  #>  --------------  #> I'm not sure I'd trust any computer recommendation from 1976, no matter how famous the authors are. #>  Peter Dalgaard #>  after Samuel Edward Kemp cited a recommendation about nonlinear least squares computer programs from 'Box-Jenkins, 1976' #>  R-help #>  January 2005  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>   say(fortune='whatever') #>  #>  --------------  #> Tom Backer Johnsen: I have just started looking at R, and are getting more and more irritated at myself for not having done that before. However, one of the things I have not found in the documentation is some way of preparing output from R for convenient formatting into something like MS Word. #> Barry Rowlingson: Well whatever you do, don't start looking at LaTeX, because that will get you even more irritated at yourself for not having done it before. #>  Tom Backer Johnsen and Barry Rowlingson #>  R-help #>  February 2006  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"trilobite","dir":"","previous_headings":"","what":"Trilobite","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"Hi there :)\", by='trilobite')  #>  #>  --------------  #> Hi there :)  #>  -------------- #>     \\ #>       \\ #>         \\ #>           _____ #>        .'` ,-. `'. #>       /   ([ ])   \\ #>      /.-\"\"`(`)`\"\"-.\\ #>       <'```(.)```'> #>       <'```(.)```'> #>        <'``(.)``'> #>    sk   <``\\_/``> #>          `'---'` #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"shark","dir":"","previous_headings":"","what":"Shark","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say('Q: What do you call a solitary shark\\nA: A lone shark', by='shark') #>  #>  --------------  #> Q: What do you call a solitary shark #> A: A lone shark  #>  -------------- #>     \\ #>       \\ #>         \\ #>               /\"\"-._ #>               .       '-, #>                :          '', #>                 ;      *     '. #>                  ' *         () '. #>                    \\               \\ #>                     \\      _.---.._ '. #>                     :  .' _.--''-''  \\ ,' #>         .._           '/.'             . ; #>         ; `-.          ,                \\' #>          ;   `,         ;              ._\\ #>           ;    \\     _,-'                ''--._ #>           :    \\_,-'                          '-._ #>           \\ ,-'                       .          '-._ #>           .'         __.-'';            \\...,__       '. #>         .'      _,-'        \\              \\   ''--.,__  '\\ #>         /    _,--' ;         \\              ;           \\^.} #>         ;_,-' )     \\  )\\      )            ; #>              /       \\/  \\_.,-'             ; #>             /                              ; #>          ,-'  _,-'''-.    ,-.,            ;      PFA #>       ,-' _.-'        \\  /    |/'-._...--' #>      :--``             )/ #>   ' #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"buffalo","dir":"","previous_headings":"","what":"Buffalo","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say('Q: What do you call a single buffalo?\\nA: A buffalonely', by='buffalo')  #>  #>  --------------  #> Q: What do you call a single buffalo? #> A: A buffalonely  #>  -------------- #>     \\ #>       \\ #>         \\ #>                    _.-````'-,_ #>          _,.,_ ,-'`           `'-.,_ #>        /)     (                   '``-. #>       ((      ) )                      `\\ #>         \\)    (_/                        )\\ #>         |       /)           '    ,'    / \\ #>         `\\    ^'            '     (    /  )) #>           |      _/\\ ,     /    ,,`\\   (  \"` #>           \\Y,   |   \\  \\  | ````| / \\_ \\ #>             `)_/      \\  \\  )    ( >  ( > #>                        \\( \\(     |/   |/ #>           mic & dwb  /_(/_(    /_(  /_( #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"clippy","dir":"","previous_headings":"","what":"Clippy","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(fortune=59, by=\"clippy\") #>  #>  #>  -----  #> Let's not kid ourselves: the most widely used piece of software for statistics is Excel. #>  Brian D. Ripley #>  'Statistical Methods Need Software: A View of Statistical Computing' #>  Opening lecture RSS 2002, Plymouth #>  September 2002  #>  ------  #>     \\    #>      \\   __ #>    / \\ #>    | | #>    @ @ #>   || || #>   || || #>   |\\_/| #>   \\___/ GB"},{"path":"https://sckott.github.io/cowsay/index.html","id":"yoda","dir":"","previous_headings":"","what":"Yoda","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"yoda\")"},{"path":"https://sckott.github.io/cowsay/index.html","id":"bats","dir":"","previous_headings":"","what":"Bats!","title":"Messages, Warnings, Strings with Ascii Animals","text":"See also bat2","code":"say(\"hi, i'm a bat\", by=\"bat\") #>  #>  -------------  #> hi, i'm a bat  #>  --------------  #>               \\    #>                \\   #>                 \\ #>         __.--'\\     \\.__./     /'--.__ #>     _.-'       '.__.'    '.__.'       '-._ #>   .'                                      '. #>  /                                          \\ #> |                                            | #> |                                            | #>  \\         .---.              .---.         / #>   '._    .'     '.''.    .''.'     '.    _.' #>      '-./            \\  /           \\.-' #>                       ''mrf"},{"path":"https://sckott.github.io/cowsay/index.html","id":"monkey","dir":"","previous_headings":"","what":"Monkey!","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"monkey\") #>  #>  -------------  #> When a Certain Guru rips strips off people (God knows he's done it to me often enough) on this list, there's a damned good reason for it. #>  Rolf Turner #>  in a discussion about whether a friendly mailing list with more 'customer service' attitude than R-help was needed #>  R-help #>  December 2003  #>  --------------  #>               \\    #>                \\   #>                 \\ #>  #>                   .=\"=. #>                 _/.-.-.\\_     _ #>                ( ( o o ) )    )) #>                 |/  \"  \\|    // #>                  \\'---'/    // #>            jgs   /`\"\"\"`\\\\  (( #>                 / /_,_\\ \\\\  \\\\ #>                 \\_\\_'__/  \\  )) #>                 /`  /`~\\   |// #>                /   /    \\  / #>           ,--`,--'\\/\\    / #>           '-- \"--'  '--'"},{"path":"https://sckott.github.io/cowsay/index.html","id":"daemon","dir":"","previous_headings":"","what":"Daemon!","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"say(\"fortune\", by = \"daemon\") #>  #>  -----  #> You might also consider a more informative subject line. \"Help needed\" is true for all questions (not answers) on R-help. Just think, why is this list called R-***help***? #>  Peter Ehlers #>  after answering a help request #>  R-help #>  April 2011  #>  ------  #>     \\    #>      \\   #>       \\ #>             ,        , #>            /(        )` #>            \\ \\___   / | #>             /- _  `-/  ' #>            (/\\/ \\ \\   /\\ #>            / /   | `     #>            O O   ) /    | #>            `-^--'`<     ' #>           (_.)  _  )   / #>            `.___/`    / #>              `-----' / #> <----.     __ / __   \\ #> <----|====O)))==) \\) /==== #> <----'    `--' `.__,' \\ #>              |        | #>               \\       / #>         ______( (_  / \\______ #>       ,'  ,-----'   |        \\ #>       `--{__________)        \\/ [nosig]"},{"path":"https://sckott.github.io/cowsay/index.html","id":"egret","dir":"","previous_headings":"","what":"Egret","title":"Messages, Warnings, Strings with Ascii Animals","text":"See also bat2","code":"say(\"je ne regrette rien\", by = \"egret\") #>  #>  -----  #> je ne regrette rien  #>  ------  #>     \\    #>      \\   #>       \\ #>        \\   _, #>       -==<' ` #>           ) / #>          / (_. #>         |  ,-,`\\ #>          \\\\   \\ \\ #>           `\\,  \\ \\ #>            ||\\  \\`|, #>  jgs      _|| `=`-' #>          ~~`~`"},{"path":"https://sckott.github.io/cowsay/index.html","id":"endless-horse","dir":"","previous_headings":"","what":"Endless horse","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"endless_horse() ## ----- ## Hello world! ## ------ ##    \\ ##     \\ ##      \\ ##       , ##    _,,)\\.~,,._ ##     (()`  ``)\\))),,_ ##      |     \\ ''((\\)))),,_          ____ ##      |6`   |   ''((\\())) \"-.____.-\"    `-.-, ##      |    .'\\    ''))))'                  \\))) ##      |   |   `.     ''                     (((( ##      \\, _)     \\/                          |)))) ##       `'        |                          ((((( ##                 \\                  |       )))))) ##                  `|    |           ,\\     /(((((( ##                   |   / `-.______.<  \\   |  ))))) ##                   |   |  /         `. \\  \\  (((( ##                   |  / \\ |           `.\\  | ((( ##                   \\  | | |             )| |  )) ##                    | | | |             || |  '   [endless.horse] ##                    | | | |             || | ## ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || | ##                    | | | |             || |"},{"path":"https://sckott.github.io/cowsay/index.html","id":"using-pipes","dir":"","previous_headings":"","what":"Using pipes","title":"Messages, Warnings, Strings with Ascii Animals","text":"","code":"library(\"magrittr\") \"I HAD FUN ONCE, IT WAS AWFUL\" %>% say('grumpycat') #>  #>  --------------  #> I HAD FUN ONCE, IT WAS AWFUL  #>  -------------- #>     \\ #>       \\ #>         \\ #>       ﾊ _ ﾊ #>       ಠ X ಠ #>"},{"path":"https://sckott.github.io/cowsay/index.html","id":"i-just-want-the-animals","dir":"","previous_headings":"","what":"I just want the animals!","title":"Messages, Warnings, Strings with Ascii Animals","text":"Okay, hold endless horses. Just use exported vector animals, can select animal want name.","code":"animals['clippy'] #>                                                                                                                    clippy  #> \"\\n\\n ----- \\n%s \\n ------ \\n    \\\\   \\n     \\\\   __\\n   / \\\\\\n   | |\\n   @ @\\n  || ||\\n  || ||\\n  |\\\\_/|\\n  \\\\___/ GB\\n\""},{"path":"https://sckott.github.io/cowsay/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Messages, Warnings, Strings with Ascii Animals","text":"License: MIT Please note project released Contributor Code Conduct. participating project agree abide terms.","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":null,"dir":"Reference","previous_headings":"","what":"Animals — animals","title":"Animals — animals","text":"Named vector animals","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Animals — animals","text":"","code":"animals"},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Animals — animals","text":"object class character length 49.","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Animals — animals","text":"animals named character vector animals, element character string variable length specifying ASCII animal. Note unicode characters play well operating systems.","code":""},{"path":"https://sckott.github.io/cowsay/reference/animals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Animals — animals","text":"","code":"animals['cow'] #>                                                                                                                                                      cow  #> \"\\n ----- \\n%s \\n ------ \\n    \\\\   ^__^ \\n     \\\\  (oo)\\\\ ________ \\n        (__)\\\\         )\\\\ /\\\\ \\n             ||------w|\\n             ||      ||\"  animals['clippy'] #>                                                                                                                    clippy  #> \"\\n\\n ----- \\n%s \\n ------ \\n    \\\\   \\n     \\\\   __\\n   / \\\\\\n   | |\\n   @ @\\n  || ||\\n  || ||\\n  |\\\\_/|\\n  \\\\___/ GB\\n\"  animals[['clippy']] #> [1] \"\\n\\n ----- \\n%s \\n ------ \\n    \\\\   \\n     \\\\   __\\n   / \\\\\\n   | |\\n   @ @\\n  || ||\\n  || ||\\n  |\\\\_/|\\n  \\\\___/ GB\\n\""},{"path":"https://sckott.github.io/cowsay/reference/cowsay-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","title":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","text":"Allows printing character strings messages/warnings/etc. ASCII animals, including cats, cows, frogs, chickens, ghosts, .","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/reference/cowsay-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cowsay: Messages, Warnings, Strings with Ascii Animals — cowsay-package","text":"Maintainer: Scott Chamberlain myrmecocystus@gmail.com Authors: Amanda Dobbyn amanda.e.dobbyn@gmail.com contributors: Tyler Rinker [contributor] Thomas Leeper [contributor] Noam Ross [contributor] Rich FitzJohn [contributor] Carson Sievert [contributor] Kiyoko Gotanda [contributor] Andy Teucher [contributor] Karl Broman [contributor] Franz-Sebastian Krah [contributor] Lucy D'Agostino McGowan [contributor] Guangchuang Yu [contributor] Philipp Boersch-Supan [contributor] Andreas Brandmaier [contributor] Marion Louveaux [contributor] David Schoch [contributor]","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":null,"dir":"Reference","previous_headings":"","what":"Endless horse — endless_horse","title":"Endless horse — endless_horse","text":"time press enter, horse keeps going...going...","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Endless horse — endless_horse","text":"","code":"endless_horse(   what = \"Hello world!\",   endless = TRUE,   wait = 0.5,   what_color = NULL,   horse_color = NULL )"},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Endless horse — endless_horse","text":"(character) want say? See details. endless (logical) horse enless, better say yes. Default: TRUE wait long wait leg segments (time grows geometrically first iteration order keep horse screen , keep going forever.  hit escape/Ctrl-C depending platform). what_color (character crayon function) crayon-suported text color crayon style function color . might try colors() ?rgb ideas. horse_color (character crayon function) crayon-suported text color crayon style function color steed.","code":""},{"path":"https://sckott.github.io/cowsay/reference/endless_horse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Endless horse — endless_horse","text":"","code":"if (FALSE) { # \\dontrun{ endless_horse() endless_horse(endless = FALSE) } # }"},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":null,"dir":"Reference","previous_headings":"","what":"Sling messages and warnings with flair — say","title":"Sling messages and warnings with flair — say","text":"Sling messages warnings flair","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sling messages and warnings with flair — say","text":"","code":"say(   what = \"Hello world!\",   by = \"cat\",   type = NULL,   what_color = NULL,   by_color = NULL,   length = 18,   fortune = NULL,   ... )"},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sling messages and warnings with flair — say","text":"(character) want say? See Details. (character) Type thing, one cow, chicken, chuck, clippy, poop, bigcat, ant, pumpkin, ghost, spider, rabbit, pig, snowman, frog, hypnotoad, shortcat, longcat, fish, signbunny, facecat, behindcat, stretchycat, anxiouscat, longtailcat, cat, trilobite, shark, buffalo, grumpycat, smallcat, yoda, mushroom, endlesshorse, bat, bat2, turkey, monkey, daemon, egret, duckling, duck, owl, squirrel, squirrel2, goldfish, alligator, stegosaurus, whale, wolf, rms Richard Stallman. Alternatively, use \"random\" message spoken random character. use match.arg() internally, can use unique parts words conflict others, like \"g\" \"ghost\" animal starts \"g\". type (character) One message (default), warning, print (default non-interactive mode), string (returns string). run non-interactive mode default type print, output goes stdout rather stderr, messages warnings go. what_color (character crayon function) One crayon-suported text color(s) crayon style function color . might try colors() ?rgb ideas. Use \"rainbow\" c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\"). by_color (character crayon function) One crayon-suported text color(s) crayon style function color . Use \"rainbow\" c(\"red\", \"orange\", \"yellow\", \"green\", \"blue\", \"purple\") length (integer) Length longcat. Ignored animals used. fortune integer specifying row number fortunes.data. Alternatively can character grep used try find suitable row. ... args passed fortunes::fortune()","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"what","dir":"Reference","previous_headings":"","what":"what","title":"Sling messages and warnings with flair — say","text":"can put phrase like parameter, can type one special phrases particular things. : \"catfact\": random cat fact https://catfact.ninja \"fortune\": random quote R coder, fortunes library \"time\": Print current time \"rms\": Prints random 'fact' Richard Stallman rmsfact::rmsfact() package. Best paired = \"rms\".","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"by","dir":"Reference","previous_headings":"","what":"by","title":"Sling messages and warnings with flair — say","text":"Note choose ='hypnotoad' quote forced , imagine, 'Glory HYPNO TOAD!'. reference see http://knowyourmeme.com/memes/hypnotoad signbunny: sure known invented signbunny, article http://www.vox.com/2014/9/18/6331753/sign-bunny-meme-explained thinks found first use tweet: https://twitter.com/wei_bluebear/status/329101645780770817 trilobite: http://www.retrojunkie.com/asciiart/animals/dinos.htm (site though) Note Windows users: animals (shortcat, longcat, fish, signbunny, stretchycat, anxiouscat, longtailcat, grumpycat, mushroom) available use non-ASCII characters display properly R Windows.","code":""},{"path":"https://sckott.github.io/cowsay/reference/say.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Sling messages and warnings with flair — say","text":"","code":"say() #>  #>  --------------  #> Hello world!  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(\"what\") #>  #>  --------------  #> what  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say('time') #>  #>  --------------  #> 2024-10-31 18:28:41.302794  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>     say(\"who you callin chicken\", \"chicken\") #>  #>  -----  #> who you callin chicken  #>  ------  #>     \\    #>      \\ #>          _ #>        _/ } #>       `>' \\ #>       `|   \\ #>        |   /'-.     .-. #>         \\'     ';`--' .' #>          \\'.    `'-./ #>           '.`-..-;` #>             `;-..' #>             _| _| #>             /` /` [nosig] #>    say(\"ain't that some shit\", \"poop\") #>  #>  -----  #> ain't that some shit  #>  ------  #>     \\    #>      \\ #>      (   ) #>   (   ) ( #>    ) _   ) #>     ( \\_ #>   _(_\\ \\)__ #>  (____\\ ___)) [nosig] say(\"icanhazpdf?\", \"cat\") #>  #>  --------------  #> icanhazpdf?  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(\"boo!\", \"pumpkin\") #>  #>  -----  #> boo!  #>  ------  #>     \\    #>      \\ #>                   ___ #>                ___)__|_ #>           .-*'          '*-, #>          /      /|   |\\     \\ #>         ;      /_|   |_\\     ; #>         ;   |\\           /|  ; #>         ;   | ''--...--'' |  ; #>          \\  ''---.....--''  / #>           ''*-.,_______,.-*'  [nosig] #>    say(\"hot diggity\", \"frog\") #>  #>  -----  #> hot diggity  #>  ------  #>     \\    #>      \\ #>         (.)_(.) #>      _ (   _   ) _ #>     / \\/`-----'\\/ \\ #>   __\\ ( (     ) ) /__ #>   )   /\\ \\._./ /\\   ( #>    )_/ /|\\   /|\\ \\_(  [nosig] #>    say(\"fortune\", \"spider\") #>  #>  -----  #> Warning: Although abusing R was not proved to be addictive, it should be noted that it often leads to harder stuff. #>  Ivan Mizera (self-confessed abuseR) #>  useR! 2006, Vienna #>  June 2006  #>  ------  #>     \\    #>      \\ #>               | #>               | #>               | #>              __ #>           | /  \\ | #>          \\_\\\\  //_/ #>           .'/()\\'. #>            \\\\  //  [nosig] #>    say(\"fortune\", \"facecat\") #>  #>  --------------  #> 1st mail: One of the reasons that SAM is popular, is that it is popular (i.e. since everyone has heard of it, it makes reviewers happy). So, it would be nice to be able to point to publications in good journals so that reviewers will be comfortable. (I personally, am quite comfortable with SAM). #> 2nd mail: Oops, must have been a Freudian slip. Actually, I am not perfectly comfortable with SAM. But I am quite comfortable with limma. #>  Naomi Altman #>  answering the question whether anyone had published data using limma for microarray analysis #>  bioconductor #>  June 2004  #>  -------------- #>     \\ #>       \\ #>          /\\ /\\ #>          (O o) #>         =(:^:)= #>            U      [nosig] #>    say(\"fortune\", \"behindcat\") #>  #>  --------------  #> The existence of a method is not a sufficient reason to use that method. #>  Jari Oksanen #>  about relative advantages of several multivariate analysis methods #>  R-SIG-Ecology #>  November 2013  #>  -------------- #>       \\ #>         \\ #>           \\ #>             |\\___/| #>             )     ( #>            =\\     /= #>              )===( #>             /     \\ #>             |     | #>            /       \\ #>            \\       / #>       jgs   \\__  _/ #>               ( ( #>                ) ) #>               (_( #>    say(\"fortune\", \"smallcat\") #>  #>  --------------  #> Seldom are prizes, credit, and gratitude given, else Brian would be drowning in them. #>  Anthony Rossini #>  about the merits of implementing software #>  R-help #>  May 2004  #>  -------------- #>     \\ #>      \\ #>       \\ #>          /\\_/\\ #>         ( o.o ) #>          > ^ <      [nosig] #>  say(\"fortune\", \"monkey\") #>  #>  -------------  #> 3-D bar plots are an abomination. Just because Excel can do them doesn't mean you should. #> (Dismount pulpit). #>  Berton Gunter #>  R-help #>  October 2007  #>  --------------  #>               \\    #>                \\   #>                 \\ #>  #>                   .=\"=. #>                 _/.-.-.\\_     _ #>                ( ( o o ) )    )) #>                 |/  \"  \\|    // #>                  \\'---'/    // #>            jgs   /`\"\"\"`\\\\  (( #>                 / /_,_\\ \\\\  \\\\ #>                 \\_\\_'__/  \\  )) #>                 /`  /`~\\   |// #>                /   /    \\  / #>           ,--`,--'\\/\\    / #>           '-- \"--'  '--' say(\"fortune\", \"egret\") #>  #>  -----  #> If anything, there should be a Law: Thou Shalt Not Even Think Of Producing A Graph That Looks Like Anything From A Spreadsheet. #>  Ted Harding #>  in a discussion about producing graphics #>  R-help #>  August 2007  #>  ------  #>     \\    #>      \\   #>       \\ #>        \\   _, #>       -==<' ` #>           ) / #>          / (_. #>         |  ,-,`\\ #>          \\\\   \\ \\ #>           `\\,  \\ \\ #>            ||\\  \\`|, #>  jgs      _|| `=`-' #>          ~~`~` say(\"rms\", \"rms\") #>  #>  #>  -----  #> Richard Stallman can touch MC Hammer.  #>  ------  #>     \\    #>      \\ #>                     @@@@@@ @ #>                   @@@@     @@ #>                  @@@@ =   =  @@  #>                 @@@ @ _   _   @@  #>                  @@@ @(0)|(0)  @@  #>                 @@@@   ~ | ~   @@ #>                 @@@ @  (o1o)    @@ #>                @@@    #######    @ #>                @@@   ##{+++}##   @@ #>               @@@@@ ## ##### ## @@@@ #>               @@@@@#############@@@@ #>              @@@@@@@###########@@@@@@ #>             @@@@@@@#############@@@@@ #>             @@@@@@@### ## ### ###@@@@ #>              @ @  @              @  @ #>                @                    @  # Vary type of output, default calls message() say(\"hell no!\") #>  #>  --------------  #> hell no!  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(\"hell no!\", type=\"warning\") #> Warning:  #>  --------------  #> hell no!  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(\"hell no!\", type=\"string\") #> [1] \"\\n -------------- \\nhell no! \\n --------------\\n    \\\\\\n      \\\\\\n        \\\\\\n            |\\\\___/|\\n          ==) ^Y^ (==\\n            \\\\  ^  /\\n             )=*=(\\n            /     \\\\\\n            |     |\\n           /| | | |\\\\\\n           \\\\| | |_|/\\\\\\n      jgs  //_// ___/\\n               \\\\_)\\n  \"  # Using fortunes say(what=\"fortune\") #>  #>  --------------  #> [Listing original copyright holders in R packages is] especially useful if there are areas of doubt and uncertainty (eg code published on ftp sites before people worried about licenses), since it at least gives you rigidly defined areas of doubt and uncertainty.[5] #> [5] Adams D, (1978) Hitchhiker's Guide. BBC Radio. #>  Thomas Lumley #>  in a discussion about copyright vs. licenses #>  R-devel #>  January 2010  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    ## you don't have to pass anything to the `what` parameter if `fortune` is ## not null say(fortune=10) #>  #>  --------------  #> Overall, SAS is about 11 years behind R and S-Plus in statistical capabilities (last year it was about 10 years behind) in my estimation. #>  Frank Harrell (SAS User, 1969-1991) #>  R-help #>  September 2003  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(fortune=100) #>  #>  --------------  #> I'm not sure I'd trust any computer recommendation from 1976, no matter how famous the authors are. #>  Peter Dalgaard #>  after Samuel Edward Kemp cited a recommendation about nonlinear least squares computer programs from 'Box-Jenkins, 1976' #>  R-help #>  January 2005  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(fortune='whatever') #>  #>  --------------  #> Justin: Is there a function that just does whatever I'm thinking (aka whatever my homework question is...)? #> Joshua Ulrich: That's the magic_pony function. #>  Justin and Joshua Ulrich #>  stackoverflow.com #>  June 2013  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(fortune=7) #>  #>  --------------  #> What we have is nice, but we need something very different. #>  Robert Gentleman #>  Statistical Computing 2003, Reisensburg #>  June 2003  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>    say(fortune=45) #>  #>  --------------  #> It seems to me against the spirit of Open Source software to attempt to monitor distribution. We could ask R to 'call home' on first use (in the way e.g. pine does) but I suspect many users would find that objectionable. #>  Brian D. Ripley #>  in a discussion about trying to estimate the number of R users #>  R-help #>  April 2004  #>  -------------- #>     \\ #>       \\ #>         \\ #>             |\\___/| #>           ==) ^Y^ (== #>             \\  ^  / #>              )=*=( #>             /     \\ #>             |     | #>            /| | | |\\ #>            \\| | |_|/\\ #>       jgs  //_// ___/ #>                \\_) #>     # Using catfacts # say(\"catfact\", \"cat\")  # The hypnotoad say(by=\"hypnotoad\") #>  #>  -----  #> All Glory to the HYPNO TOAD!  #>  ------ #>     \\          ,'``.._   ,'``. #>      \\        :,--._:)\\,:,._,.: #>       \\       :`--,''   :`...';\\ #>                `,'       `---'  `. #>                /                 : #>               /                   \\ #>             ,'                     :\\.___,-. #>            `...,---'``````-..._    |:       \\ #>              (                 )   ;:    )   \\  _,-. #>               `.              (   //          `'    \\ #>                :               `.//  )      )     , ; #>              ,-|`.            _,'/       )    ) ,' ,' #>             (  :`.`-..____..=:.-':     .     _,' ,' #>              `,'\\ ``--....-)='    `._,  \\  ,') _ '``._ #>           _.-/ _ `.       (_)      /     )' ; / \\ \\`-.' #>          `--(   `-:`.     `' ___..'  _,-'   |/   `.) #>              `-. `.`.``-----``--,  .' #>                |/`.\\`'        ,','); SSt #>                    `         (/  (/ #>     # Trilobite say(by='trilobite') #>  #>  --------------  #> Hello world!  #>  -------------- #>     \\ #>       \\ #>         \\ #>           _____ #>        .'` ,-. `'. #>       /   ([ ])   \\ #>      /.-\"\"`(`)`\"\"-.\\ #>       <'```(.)```'> #>       <'```(.)```'> #>        <'``(.)``'> #>    sk   <``\\_/``> #>          `'---'` #>     # Shark say('Q: What do you call a solitary shark\\nA: A lone shark', by='shark') #>  #>  --------------  #> Q: What do you call a solitary shark #> A: A lone shark  #>  -------------- #>     \\ #>       \\ #>         \\ #>               /\"\"-._ #>               .       '-, #>                :          '', #>                 ;      *     '. #>                  ' *         () '. #>                    \\               \\ #>                     \\      _.---.._ '. #>                     :  .' _.--''-''  \\ ,' #>         .._           '/.'             . ; #>         ; `-.          ,                \\' #>          ;   `,         ;              ._\\ #>           ;    \\     _,-'                ''--._ #>           :    \\_,-'                          '-._ #>           \\ ,-'                       .          '-._ #>           .'         __.-'';            \\...,__       '. #>         .'      _,-'        \\              \\   ''--.,__  '\\ #>         /    _,--' ;         \\              ;           \\^.} #>         ;_,-' )     \\  )\\      )            ; #>              /       \\/  \\_.,-'             ; #>             /                              ; #>          ,-'  _,-'''-.    ,-.,            ;      PFA #>       ,-' _.-'        \\  /    |/'-._...--' #>      :--``             )/ #>   ' #>     # Buffalo say('Q: What do you call a single buffalo?\\nA: A buffalonely', by='buffalo') #>  #>  --------------  #> Q: What do you call a single buffalo? #> A: A buffalonely  #>  -------------- #>     \\ #>       \\ #>         \\ #>                    _.-````'-,_ #>          _,.,_ ,-'`           `'-.,_ #>        /)     (                   '``-. #>       ((      ) )                      `\\ #>         \\)    (_/                        )\\ #>         |       /)           '    ,'    / \\ #>         `\\    ^'            '     (    /  )) #>           |      _/\\ ,     /    ,,`\\   (  \"` #>           \\Y,   |   \\  \\  | ````| / \\_ \\ #>             `)_/      \\  \\  )    ( >  ( > #>                        \\( \\(     |/   |/ #>           mic & dwb  /_(/_(    /_(  /_( #>       # Clippy say(fortune=59, by=\"clippy\") #>  #>  #>  -----  #> Let's not kid ourselves: the most widely used piece of software for statistics is Excel. #>  Brian D. Ripley #>  'Statistical Methods Need Software: A View of Statistical Computing' #>  Opening lecture RSS 2002, Plymouth #>  September 2002  #>  ------  #>     \\    #>      \\   __ #>    / \\ #>    | | #>    @ @ #>   || || #>   || || #>   |\\_/| #>   \\___/ GB"},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-090","dir":"Changelog","previous_headings":"","what":"cowsay 0.9.0","title":"cowsay 0.9.0","text":"CRAN release: 2023-11-02 remove multicolor temporarily longer CRAN (#86) use new special “sentinel” “PACKAGE” prefixed underscore package level manual file (84) new animals alligator, goldfish, stegosaurus, whale, wolf @harriscw (#79)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-082","dir":"Changelog","previous_headings":"","what":"cowsay 0.8.2","title":"cowsay 0.8.2","text":"CRAN release: 2023-03-08 makes sure use suggested package multicolor conditionally throughout package (tests, examples, vignettes)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.8","text":"say() parameter loses fillerama options (“arresteddevelopment”, “doctorwho”, “dexter”, “futurama”, “holygrail”, “simpsons”, “starwars”, “loremipsum”) API gains two squirrels squirrel squirrel2 (#74) @marionlouveaux gains chuck norris chuck (#62) @bgreenwell type parameter say() gains new option print, default option non-interactive environments. type=\"print\" cat() output (#70) (#72)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-0-8","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay 0.8","text":"standardize spacing first line animals (#68) (#69) add examples readme using colors (#73)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-8","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.8","text":"fix use colors: colors can used certain computing environments, tell users set colors NULL (#65) (#66)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-7","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.7","text":"cowsay now supports colors via multicolor package Amanda Dobbyn. supports coloring thing said (new what_color parameter) thing saying (new by_color parameter). supports one color. thanks Amanda! (#59) (#61)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-6","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.6","text":"Fix catfact API usage (#56) (#57)","code":""},{"path":[]},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"new-features-0-5","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"cowsay 0.5","text":"@ateucher added support rmsfact package, random facts Richard Stallman (#45) turkey animal added @jeremycg , thanks Jeremy! (#46) @LucyMcGowan added monkey, thanks Lucy! (#47) @GuangchuangYu added BSD daemon, also called “beastie”, thank much! (#48) (#49) @onertipaday added support quotes http://fillerama.io/ service quotes Futurama, Star Wars, Dexter, Monty Python, Doctor , . Thanks Paolo! (#51)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"minor-improvements-0-5","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"cowsay 0.5","text":"removed broken link readme pkg (#43) thanks @apjanke","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"bug-fixes-0-5","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"cowsay 0.5","text":"@ateucher fixed problem windows (#40) @florianm fixed spelling error (#41) (#42)","code":""},{"path":"https://sckott.github.io/cowsay/news/index.html","id":"cowsay-04","dir":"Changelog","previous_headings":"","what":"cowsay 0.4","title":"cowsay 0.4","text":"First release CRAN","code":""}]
